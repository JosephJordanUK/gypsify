name: Update manifest and latest SHA

on:
  workflow_run:
    workflows: ["Sync tracker/dev to dev"]
    branches: [dev]
    types: [completed]
  workflow_dispatch: {}

concurrency:
  group: update-manifest-dev
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/heads/tracker/dev

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Resolve SHAs from repo state
        id: shas
        shell: bash
        run: |
          NEW_SHA="$(git rev-parse HEAD)"
          if git cat-file -e HEAD:prompt/latest-sha.txt 2>/dev/null; then
            OLD_SHA="$(git show HEAD:prompt/latest-sha.txt | tr -d '\n')"
          else
            if git rev-parse HEAD^ >/dev/null 2>&1; then
              OLD_SHA="$(git rev-parse HEAD^)"
            else
              OLD_SHA="$NEW_SHA"
            fi
          fi
          echo "NEW_SHA=$NEW_SHA" >> "$GITHUB_OUTPUT"
          echo "OLD_SHA=$OLD_SHA" >> "$GITHUB_OUTPUT"
          echo "New: $NEW_SHA"
          echo "Old: $OLD_SHA"

      - name: Build manifest.json (all tracked files)
        run: |
          jq -n '[]' > prompt/manifest.json
          git ls-files \
            | grep -Ev '^(node_modules/|ios/|android/|tests/|docs/|\.git/|\.github/workflows/)' \
            | while read -r f; do
                [ -f "$f" ] || continue
                BYTES=$(wc -c < "$f" | xargs)
                SHA256=$(sha256sum "$f" | cut -d" " -f1)
                jq --arg path "$f" --argjson bytes "$BYTES" --arg sha "$SHA256" \
                   '. + [{"path":$path,"bytes":$bytes,"sha256":$sha}]' \
                   prompt/manifest.json > prompt/manifest.tmp && mv prompt/manifest.tmp prompt/manifest.json
              done

      - name: Build changed-in-latest.json (diff OLD -> NEW)
        run: |
          git diff --name-only ${{ steps.shas.outputs.OLD_SHA }} ${{ steps.shas.outputs.NEW_SHA }} \
            | grep -Ev '^(node_modules/|ios/|android/|tests/|docs/|\.git/|\.github/workflows/|prompt/)' \
            | jq -R -s 'split("\n") | map(select(length>0))' > prompt/changed-in-latest.json

      - name: Write latest-sha.txt
        run: |
          mkdir -p prompt
          echo "${{ steps.shas.outputs.NEW_SHA }}" > prompt/latest-sha.txt

      - name: Debug print JSON before commit
        run: |
          echo "---- DIFF ----"
          git diff --name-only ${{ steps.shas.outputs.OLD_SHA }} ${{ steps.shas.outputs.NEW_SHA }}
          echo "---- changed-in-latest.json ----"
          cat prompt/changed-in-latest.json || true
          echo "---- latest-sha.txt ----"
          cat prompt/latest-sha.txt || true

      - name: Commit and push artifacts (explicit)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A prompt/latest-sha.txt prompt/manifest.json prompt/changed-in-latest.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: update manifest and latest SHA [skip ci]"
            git push origin HEAD:tracker/dev
          else
            echo "No artifact changes to commit."
          fi
