name: Publish tracking artifacts to tracker/dev

on:
  push:
    branches: [dev]
    paths-ignore:
      - 'prompt/latest-sha.txt'
      - 'prompt/manifest.json'
      - 'prompt/changed-in-latest.json'
      - 'prompt/snapshots/**'
      - '.github/workflows/**'

concurrency:
  group: tracker-dev
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Resolve SHAs from event
        id: shas
        run: |
          echo "NEW_SHA=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "OLD_SHA=${{ github.event.before }}" >> $GITHUB_OUTPUT
          echo "New: ${{ github.sha }}"
          echo "Old: ${{ github.event.before }}"

      - name: Checkout tracker/dev
        run: |
          git fetch origin tracker/dev || true
          if git show-ref --verify --quiet refs/remotes/origin/tracker/dev; then
            git checkout -B tracker/dev origin/tracker/dev
          else
            git checkout --orphan tracker/dev
            rm -rf .
            mkdir -p prompt
            git add prompt
            git -c "user.name=github-actions[bot]" -c "user.email=41898282+github-actions[bot]@users.noreply.github.com" commit -m "chore(tracker): init branch"
          fi

      - name: Reset workspace for prompt only
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name ".git" ! -name "prompt" -exec rm -rf {} +
          mkdir -p prompt

      - name: Build manifest.json (from dev tree)
        run: |
          jq -n '[]' > prompt/manifest.json
          git ls-files --with-tree=origin/dev \
            | grep -Ev '^(node_modules/|ios/|android/|tests/|docs/|\.git/|\.github/workflows/|prompt/)' \
            | while read -r f; do
                BYTES=$(git cat-file -s "origin/dev:$f" || echo 0)
                if [ "$BYTES" != "0" ]; then
                  SHA256=$(git show "origin/dev:$f" | sha256sum | cut -d" " -f1)
                  jq --arg path "$f" --argjson bytes "$BYTES" --arg sha "$SHA256" \
                     '. + [{"path":$path,"bytes":$bytes,"sha256":$sha}]' \
                     prompt/manifest.json > prompt/manifest.tmp && mv prompt/manifest.tmp prompt/manifest.json
                fi
              done

      - name: Build changed-in-latest.json (diff OLD -> NEW on dev)
        run: |
          git diff --name-only ${{ steps.shas.outputs.OLD_SHA }} ${{ steps.shas.outputs.NEW_SHA }} \
            | grep -Ev '^(node_modules/|ios/|android/|tests/|docs/|\.git/|\.github/workflows/|prompt/)' \
            | jq -R -s 'split("\n") | map(select(length>0))' > prompt/changed-in-latest.json

      - name: Write latest-sha.txt
        run: |
          echo "${{ steps.shas.outputs.NEW_SHA }}" > prompt/latest-sha.txt

      - name: Write snapshots of changed files from dev
        run: |
          set -e
          SHA="${{ steps.shas.outputs.NEW_SHA }}"
          mkdir -p "prompt/snapshots/${SHA}"
          CHANGED=$(cat prompt/changed-in-latest.json | jq -r '.[]')
          for f in $CHANGED; do
            mkdir -p "prompt/snapshots/${SHA}/$(dirname "$f")"
            git show "${SHA}:${f}" > "prompt/snapshots/${SHA}/${f}" || true
          done

      - name: Commit and push artifacts to tracker/dev
        run: |
          git add prompt/latest-sha.txt prompt/manifest.json prompt/changed-in-latest.json prompt/snapshots
          if ! git diff --cached --quiet; then
            git -c "user.name=github-actions[bot]" -c "user.email=41898282+github-actions[bot]@users.noreply.github.com" commit -m "chore(tracker): publish artifacts for ${{ steps.shas.outputs.NEW_SHA }} [skip ci]"
            git push origin HEAD:tracker/dev
          else
            echo "No changes to publish."
          fi
