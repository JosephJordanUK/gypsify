{
  "sha": "adec4cbbc4c3cc82d0f0f9d8dd162de081ff0622",
  "files": [
    {
      "path": ".editorconfig",
      "base64": "cm9vdCA9IHRydWUKClsqXQpjaGFyc2V0ID0gdXRmLTgKZW5kX29mX2xpbmUgPSBsZgppbmRlbnRfc3R5bGUgPSBzcGFjZQppbmRlbnRfc2l6ZSA9IDIKaW5zZXJ0X2ZpbmFsX25ld2xpbmUgPSB0cnVlCnRyaW1fdHJhaWxpbmdfd2hpdGVzcGFjZSA9IHRydWUK"
    },
    {
      "path": ".firebaserc",
      "base64": "ewogICJwcm9qZWN0cyI6IHsgImRlZmF1bHQiOiAiZ3lwc2lmeS0zNTQ0NyIgfQp9Cg=="
    },
    {
      "path": ".nvmrc",
      "base64": "MjAuMTkuNAo="
    },
    {
      "path": ".prettierignore",
      "base64": "bm9kZV9tb2R1bGVzCmRpc3QKYnVpbGQKYW5kcm9pZAppb3MK"
    },
    {
      "path": ".prettierrc.json",
      "base64": "ewogICJzaW5nbGVRdW90ZSI6IHRydWUsCiAgInRyYWlsaW5nQ29tbWEiOiAiYWxsIiwKICAicHJpbnRXaWR0aCI6IDEwMCwKICAic2VtaSI6IHRydWUKfQo="
    },
    {
      "path": "App.tsx",
      "base64": "aW1wb3J0ICdyZWFjdC1uYXRpdmUtZ2VzdHVyZS1oYW5kbGVyJzsKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0ICcuL3NyYy91dGlscy9pMThuJzsKaW1wb3J0IFJvb3ROYXZpZ2F0b3IgZnJvbSAnLi9zcmMvbmF2aWdhdGlvbi9Sb290TmF2aWdhdG9yJzsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCgpIHsKICByZXR1cm4gPFJvb3ROYXZpZ2F0b3IgLz47Cn0="
    },
    {
      "path": "README.md",
      "base64": "IyBHeXBzaWZ5IOKAlCBGaXJlYmFzZSBzZXR1cCAoUGhhc2UgMykKCiMjIENvbmZpZ3VyZQoKMS4gQ29weSBgLmVudi5leGFtcGxlYCB0byBgLmVudmAuCjIuIEZpbGwgRmlyZWJhc2Ugd2ViIGNvbmZpZyBmcm9tIEZpcmViYXNlIENvbnNvbGUg4oaSIFByb2plY3Qgc2V0dGluZ3Mg4oaSIEdlbmVyYWwuCgojIyBSdW4KCmBgYGJhc2gKeWFybgp5YXJuIGxpbnQKbnB4IGV4cG8gc3RhcnQKYGBgCgo="
    },
    {
      "path": "app.json",
      "base64": "ewogICJleHBvIjogewogICAgIm5hbWUiOiAiZ3lwc2lmeSIsCiAgICAic2x1ZyI6ICJneXBzaWZ5IiwKICAgICJ2ZXJzaW9uIjogIjEuMC4wIiwKICAgICJvcmllbnRhdGlvbiI6ICJwb3J0cmFpdCIsCiAgICAiaWNvbiI6ICIuL2Fzc2V0cy9pY29uLnBuZyIsCiAgICAidXNlckludGVyZmFjZVN0eWxlIjogImxpZ2h0IiwKICAgICJuZXdBcmNoRW5hYmxlZCI6IHRydWUsCiAgICAic3BsYXNoIjogewogICAgICAiaW1hZ2UiOiAiLi9hc3NldHMvc3BsYXNoLWljb24ucG5nIiwKICAgICAgInJlc2l6ZU1vZGUiOiAiY29udGFpbiIsCiAgICAgICJiYWNrZ3JvdW5kQ29sb3IiOiAiI2ZmZmZmZiIKICAgIH0sCiAgICAiaW9zIjogewogICAgICAic3VwcG9ydHNUYWJsZXQiOiB0cnVlCiAgICB9LAogICAgImFuZHJvaWQiOiB7CiAgICAgICJhZGFwdGl2ZUljb24iOiB7CiAgICAgICAgImZvcmVncm91bmRJbWFnZSI6ICIuL2Fzc2V0cy9hZGFwdGl2ZS1pY29uLnBuZyIsCiAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICIjZmZmZmZmIgogICAgICB9LAogICAgICAiZWRnZVRvRWRnZUVuYWJsZWQiOiB0cnVlCiAgICB9LAogICAgIndlYiI6IHsKICAgICAgImZhdmljb24iOiAiLi9hc3NldHMvZmF2aWNvbi5wbmciCiAgICB9LAogICAgInBsdWdpbnMiOiBbImV4cG8tbG9jYWxpemF0aW9uIl0KICB9Cn0K"
    },
    {
      "path": "babel.config.js",
      "base64": "bW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihhcGkpIHsKICBhcGkuY2FjaGUodHJ1ZSk7CiAgcmV0dXJuIHsKICAgIHByZXNldHM6IFsnYmFiZWwtcHJlc2V0LWV4cG8nXSwKICAgIHBsdWdpbnM6IFsncmVhY3QtbmF0aXZlLXJlYW5pbWF0ZWQvcGx1Z2luJ10sCiAgfTsKfTsK"
    },
    {
      "path": "eslint.config.cjs",
      "base64": "Y29uc3QgeyBGbGF0Q29tcGF0IH0gPSByZXF1aXJlKCdAZXNsaW50L2VzbGludHJjJyk7CmNvbnN0IGpzID0gcmVxdWlyZSgnQGVzbGludC9qcycpOwpjb25zdCB0c1BhcnNlciA9IHJlcXVpcmUoJ0B0eXBlc2NyaXB0LWVzbGludC9wYXJzZXInKTsKY29uc3QgdHNQbHVnaW4gPSByZXF1aXJlKCdAdHlwZXNjcmlwdC1lc2xpbnQvZXNsaW50LXBsdWdpbicpOwpjb25zdCByZWFjdFBsdWdpbiA9IHJlcXVpcmUoJ2VzbGludC1wbHVnaW4tcmVhY3QnKTsKY29uc3QgcmVhY3RIb29rc1BsdWdpbiA9IHJlcXVpcmUoJ2VzbGludC1wbHVnaW4tcmVhY3QtaG9va3MnKTsKCmNvbnN0IGNvbXBhdCA9IG5ldyBGbGF0Q29tcGF0KHsgYmFzZURpcmVjdG9yeTogX19kaXJuYW1lIH0pOwoKbW9kdWxlLmV4cG9ydHMgPSBbCiAgLy8gaWdub3JlCiAgeyBpZ25vcmVzOiBbJ25vZGVfbW9kdWxlcy8qKicsJ2Rpc3QvKionLCdidWlsZC8qKicsJ2FuZHJvaWQvKionLCdpb3MvKionLCdlc2xpbnQuY29uZmlnLmNqcycsICdiYWJlbC5jb25maWcuanMnLAonbWV0cm8uY29uZmlnLmpzJywgJ2plc3QuY29uZmlnLionLCAnKi5jb25maWcuanMnLF0gfSwKCiAgLy8gSlMgcmVjb21tZW5kZWQsIHNjb3BlZCB0byBzb3VyY2UgZmlsZXMKICB7IGZpbGVzOiBbJyoqLyoue2pzLGpzeCx0cyx0c3h9J10sIC4uLmpzLmNvbmZpZ3MucmVjb21tZW5kZWQgfSwKCiAgLy8gUmVhY3QgKyBIb29rcyBwcmVzZXRzLCBzY29wZWQKICAuLi5jb21wYXQKICAgIC5leHRlbmRzKCdwbHVnaW46cmVhY3QvcmVjb21tZW5kZWQnLCAncGx1Z2luOnJlYWN0LWhvb2tzL3JlY29tbWVuZGVkJywgJ3ByZXR0aWVyJykKICAgIC5tYXAoKGNmZykgPT4gKHsgZmlsZXM6IFsnKiovKi57anMsanN4LHRzLHRzeH0nXSwgLi4uY2ZnIH0pKSwKCiAgLy8gVFMgcHJlc2V0LCBzY29wZWQKICAuLi5jb21wYXQKICAgIC5leHRlbmRzKCdwbHVnaW46QHR5cGVzY3JpcHQtZXNsaW50L3JlY29tbWVuZGVkJykKICAgIC5tYXAoKGNmZykgPT4gKHsgZmlsZXM6IFsnKiovKi57anMsanN4LHRzLHRzeH0nXSwgLi4uY2ZnIH0pKSwKCiAgLy8gcHJvamVjdCBwYXJzZXIvcGx1Z2lucwogIHsKICAgIGZpbGVzOiBbJyoqLyoue2pzLGpzeCx0cyx0c3h9J10sCiAgICBsYW5ndWFnZU9wdGlvbnM6IHsKICAgICAgcGFyc2VyOiB0c1BhcnNlciwKICAgICAgcGFyc2VyT3B0aW9uczogeyBlY21hVmVyc2lvbjogMjAyMCwgc291cmNlVHlwZTogJ21vZHVsZScsIGVjbWFGZWF0dXJlczogeyBqc3g6IHRydWUgfSB9LAogICAgfSwKICAgIHBsdWdpbnM6IHsKICAgICAgJ0B0eXBlc2NyaXB0LWVzbGludCc6IHRzUGx1Z2luLAogICAgICByZWFjdDogcmVhY3RQbHVnaW4sCiAgICAgICdyZWFjdC1ob29rcyc6IHJlYWN0SG9va3NQbHVnaW4sCiAgICB9LAogICAgc2V0dGluZ3M6IHsgcmVhY3Q6IHsgdmVyc2lvbjogJ2RldGVjdCcgfSB9LAogIH0sCgogIC8vIEZJTkFMIG92ZXJyaWRlcyB3aW4KICB7CiAgICBmaWxlczogWycqKi8qLntqcyxqc3gsdHMsdHN4fSddLAogICAgcnVsZXM6IHsKICAgICAgJ3JlYWN0L3JlYWN0LWluLWpzeC1zY29wZSc6ICdvZmYnLAogICAgICAnQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlcyc6ICdvZmYnLAogICAgfSwKICB9LApdOwo="
    },
    {
      "path": "firebase.json",
      "base64": "ewogICJmaXJlc3RvcmUiOiB7CiAgICAicnVsZXMiOiAicHJvbXB0L2ZpcmVzdG9yZS5ydWxlcyIsCiAgICAiaW5kZXhlcyI6ICJmaXJlc3RvcmUuaW5kZXhlcy5qc29uIgogIH0KfQo="
    },
    {
      "path": "firestore.indexes.json",
      "base64": "ewogICJpbmRleGVzIjogW10sCiAgImZpZWxkT3ZlcnJpZGVzIjogW10KfQo="
    },
    {
      "path": "index.ts",
      "base64": "aW1wb3J0IHsgcmVnaXN0ZXJSb290Q29tcG9uZW50IH0gZnJvbSAnZXhwbyc7CgppbXBvcnQgQXBwIGZyb20gJy4vQXBwJzsKCi8vIHJlZ2lzdGVyUm9vdENvbXBvbmVudCBjYWxscyBBcHBSZWdpc3RyeS5yZWdpc3RlckNvbXBvbmVudCgnbWFpbicsICgpID0+IEFwcCk7Ci8vIEl0IGFsc28gZW5zdXJlcyB0aGF0IHdoZXRoZXIgeW91IGxvYWQgdGhlIGFwcCBpbiBFeHBvIEdvIG9yIGluIGEgbmF0aXZlIGJ1aWxkLAovLyB0aGUgZW52aXJvbm1lbnQgaXMgc2V0IHVwIGFwcHJvcHJpYXRlbHkKcmVnaXN0ZXJSb290Q29tcG9uZW50KEFwcCk7Cg=="
    },
    {
      "path": "metro.config.js",
      "base64": "Ly8gTWV0cm8gY29uZmlnIGZvciBFeHBvICsgRmlyZWJhc2UgU0RLIGNvbXBhdGliaWxpdHkKLy8gbGFzdFVwZGF0ZWQgMjAyNS0wOC0yMgpjb25zdCB7IGdldERlZmF1bHRDb25maWcgfSA9IHJlcXVpcmUoJ0BleHBvL21ldHJvLWNvbmZpZycpOwoKY29uc3QgY29uZmlnID0gZ2V0RGVmYXVsdENvbmZpZyhfX2Rpcm5hbWUpOwpjb25maWcucmVzb2x2ZXIuc291cmNlRXh0cy5wdXNoKCdjanMnKTsKY29uZmlnLnJlc29sdmVyLnVuc3RhYmxlX2VuYWJsZVBhY2thZ2VFeHBvcnRzID0gZmFsc2U7Cgptb2R1bGUuZXhwb3J0cyA9IGNvbmZpZzsK"
    },
    {
      "path": "package.json",
      "base64": "ewogICJuYW1lIjogImd5cHNpZnkiLAogICJ2ZXJzaW9uIjogIjEuMC4wIiwKICAibWFpbiI6ICJpbmRleC50cyIsCiAgInNjcmlwdHMiOiB7CiAgICAic3RhcnQiOiAiZXhwbyBzdGFydCIsCiAgICAiYW5kcm9pZCI6ICJleHBvIHN0YXJ0IC0tYW5kcm9pZCIsCiAgICAiaW9zIjogImV4cG8gc3RhcnQgLS1pb3MiLAogICAgIndlYiI6ICJleHBvIHN0YXJ0IC0td2ViIiwKICAgICJsaW50IjogImVzbGludCAuIC0tZXh0IC50cywudHN4IiwKICAgICJsaW50OmZpeCI6ICJlc2xpbnQgLiAtLWV4dCAudHMsLnRzeCAtLWZpeCIsCiAgICAidHlwZWNoZWNrIjogInRzYyAtcCB0c2NvbmZpZy5qc29uIC0tbm9FbWl0IiwKICAgICJkb2N0b3IiOiAiZXhwby1kb2N0b3IgLiAtLWNpIiwKICAgICJmb3JtYXQiOiAicHJldHRpZXIgLS13cml0ZSAuIiwKICAgICJwcmVwYXJlIjogImh1c2t5IgogIH0sCiAgImRlcGVuZGVuY2llcyI6IHsKICAgICJAcmVhY3QtbmF0aXZlLWFzeW5jLXN0b3JhZ2UvYXN5bmMtc3RvcmFnZSI6ICIyLjEuMiIsCiAgICAiQHJlYWN0LW5hdmlnYXRpb24vYm90dG9tLXRhYnMiOiAiXjcuNC42IiwKICAgICJAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUiOiAiXjcuMS4xNyIsCiAgICAiQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlLXN0YWNrIjogIl43LjMuMjUiLAogICAgImV4cG8iOiAiNTMuMC4yMiIsCiAgICAiZXhwby1sb2NhbGl6YXRpb24iOiAifjE2LjEuNiIsCiAgICAiZXhwby1zdGF0dXMtYmFyIjogIn4yLjIuMyIsCiAgICAiZmlyZWJhc2UiOiAiXjEyLjEuMCIsCiAgICAiaTE4bmV4dCI6ICJeMjUuNC4wIiwKICAgICJyZWFjdCI6ICIxOS4wLjAiLAogICAgInJlYWN0LWkxOG5leHQiOiAiXjE1LjcuMSIsCiAgICAicmVhY3QtbmF0aXZlIjogIjAuNzkuNSIsCiAgICAicmVhY3QtbmF0aXZlLWdlc3R1cmUtaGFuZGxlciI6ICJ+Mi4yNC4wIiwKICAgICJyZWFjdC1uYXRpdmUtcmVhbmltYXRlZCI6ICJ+My4xNy40IiwKICAgICJyZWFjdC1uYXRpdmUtc2FmZS1hcmVhLWNvbnRleHQiOiAiNS40LjAiLAogICAgInJlYWN0LW5hdGl2ZS1zY3JlZW5zIjogIn40LjExLjEiCiAgfSwKICAiZGV2RGVwZW5kZW5jaWVzIjogewogICAgIkBiYWJlbC9jb3JlIjogIl43LjI1LjIiLAogICAgIkBlc2xpbnQvZXNsaW50cmMiOiAiXjMuMy4xIiwKICAgICJAZXNsaW50L2pzIjogIl45LjMzLjAiLAogICAgIkB0eXBlcy9yZWFjdCI6ICJ+MTkuMC4xMCIsCiAgICAiQHR5cGVzY3JpcHQtZXNsaW50L2VzbGludC1wbHVnaW4iOiAiXjguNDAuMCIsCiAgICAiQHR5cGVzY3JpcHQtZXNsaW50L3BhcnNlciI6ICJeOC40MC4wIiwKICAgICJlc2xpbnQiOiAiXjkuMzMuMCIsCiAgICAiZXNsaW50LWNvbmZpZy1wcmV0dGllciI6ICJeMTAuMS44IiwKICAgICJlc2xpbnQtcGx1Z2luLXJlYWN0IjogIl43LjM3LjUiLAogICAgImVzbGludC1wbHVnaW4tcmVhY3QtaG9va3MiOiAiXjUuMi4wIiwKICAgICJleHBvLWRvY3RvciI6ICJeMS4xNy4wIiwKICAgICJodXNreSI6ICJeOS4xLjciLAogICAgImxpbnQtc3RhZ2VkIjogIl4xNi4xLjUiLAogICAgInByZXR0aWVyIjogIl4zLjYuMiIsCiAgICAidHlwZXNjcmlwdCI6ICJ+NS44LjMiCiAgfSwKICAicHJpdmF0ZSI6IHRydWUsCiAgImxpbnQtc3RhZ2VkIjogewogICAgIioue3RzLHRzeCxqcyxqc3h9IjogWwogICAgICAiZXNsaW50IC0tZml4IgogICAgXSwKICAgICIqLntqc29uLG1kLGNzcyx5bWwseWFtbH0iOiBbCiAgICAgICJwcmV0dGllciAtLXdyaXRlIgogICAgXQogIH0sCiAgImVuZ2luZXMiOiB7CiAgICAibm9kZSI6ICIyMC4xOS40IiwKICAgICJ5YXJuIjogIjEuMjIuMjIiCiAgfQp9Cg=="
    },
    {
      "path": "prompt/MasterPrompt.md",
      "base64": ""
    },
    {
      "path": "prompt/checklist.md",
      "base64": ""
    },
    {
      "path": "prompt/firestore.rules",
      "base64": "cnVsZXNfdmVyc2lvbiA9ICcyJzsKc2VydmljZSBjbG91ZC5maXJlc3RvcmUgewogIG1hdGNoIC9kYXRhYmFzZXMve2RhdGFiYXNlfS9kb2N1bWVudHMgewoKICAgIGZ1bmN0aW9uIGlzU2lnbmVkSW4oKSB7CiAgICAgIHJldHVybiByZXF1ZXN0LmF1dGggIT0gbnVsbDsKICAgIH0KCiAgICBmdW5jdGlvbiBlbWFpbFZlcmlmaWVkKCkgewogICAgICAvLyBGaXJlYmFzZSBzZXRzIHRoaXMgYm9vbGVhbiBvbiB0aGUgSUQgdG9rZW4KICAgICAgcmV0dXJuIHJlcXVlc3QuYXV0aC50b2tlbi5lbWFpbF92ZXJpZmllZCA9PSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIGlzT3duZXIodWlkKSB7CiAgICAgIHJldHVybiBpc1NpZ25lZEluKCkgJiYgcmVxdWVzdC5hdXRoLnVpZCA9PSB1aWQ7CiAgICB9CgogICAgLy8gVXNlcnMgY29sbGVjdGlvbiAodGlnaHQgYnkgZGVmYXVsdCkKICAgIG1hdGNoIC91c2Vycy97dWlkfSB7CiAgICAgIGFsbG93IHJlYWQ6IGlmIGlzT3duZXIodWlkKTsgICAgICAgICAgICAgICAgICAgICAvLyBhZGp1c3QgdG8gYHRydWVgIGlmIHByb2ZpbGVzIGFyZSBwdWJsaWMKICAgICAgYWxsb3cgY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZTogaWYgaXNPd25lcih1aWQpICYmIGVtYWlsVmVyaWZpZWQoKTsKICAgIH0KCiAgICAvLyBFeGFtcGxlOiBwb3N0cyAocHVibGljIHJlYWQsIHZlcmlmaWVkIHdyaXRlcnMgb25seSkKICAgIG1hdGNoIC9wb3N0cy97cG9zdElkfSB7CiAgICAgIGFsbG93IHJlYWQ6IGlmIHRydWU7CiAgICAgIGFsbG93IGNyZWF0ZSwgdXBkYXRlLCBkZWxldGU6IGlmIGlzU2lnbmVkSW4oKSAmJiBlbWFpbFZlcmlmaWVkKCkKICAgICAgICAmJiByZXF1ZXN0LnJlc291cmNlLmRhdGEuYXV0aG9ySWQgPT0gcmVxdWVzdC5hdXRoLnVpZDsKICAgIH0KCiAgICAvLyBFeGFtcGxlOiB1cGxvYWRzIG9yIHRyYWNrcyAodmVyaWZpZWQgd3JpdGVycyBvbmx5KQogICAgbWF0Y2ggL3VwbG9hZHMve2lkfSB7CiAgICAgIGFsbG93IHJlYWQ6IGlmIHRydWU7CiAgICAgIGFsbG93IHdyaXRlOiBpZiBpc1NpZ25lZEluKCkgJiYgZW1haWxWZXJpZmllZCgpOwogICAgfQoKICAgIC8vIERlbnkgZXZlcnl0aGluZyBlbHNlIGJ5IGRlZmF1bHQKICAgIG1hdGNoIC97ZG9jdW1lbnQ9Kip9IHsKICAgICAgYWxsb3cgcmVhZCwgd3JpdGU6IGlmIGZhbHNlOwogICAgfQogIH0KfQo="
    },
    {
      "path": "prompt/mini-manifest.yml",
      "base64": "bWFuaWZlc3Q6CiAgcHJvbXB0L2NoZWNrbGlzdC5tZDoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3Byb21wdC9jaGVja2xpc3QubWQKICAgIGRlc2NyaXB0aW9uOiBFeGVjdXRpb24gY2hlY2tsaXN0CiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgcHJvbXB0L2ZpcmVzdG9yZS5ydWxlczoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3Byb21wdC9maXJlc3RvcmUucnVsZXMKICAgIGRlc2NyaXB0aW9uOiBGaXJlc3RvcmUgc2VjdXJpdHkgcnVsZXMgKHJlZmVyZW5jZSBjb3B5KQogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHByb21wdC9NYXN0ZXJQcm9tcHQubWQ6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9wcm9tcHQvTWFzdGVyUHJvbXB0Lm1kCiAgICBkZXNjcmlwdGlvbjogTWFzdGVyIHN5c3RlbSBwcm9tcHQgZGVmaW5pbmcgd29ya2Zsb3cKICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBwcm9tcHQvbWluaS1tYW5pZmVzdC55bWw6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9wcm9tcHQvbWluaS1tYW5pZmVzdC55bWwKICAgIGRlc2NyaXB0aW9uOiBGaWxlIHRyYWNraW5nIGNoZWNrcG9pbnQgZm9yIHByb21wdC8gYW5kIHNyYy8KICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBwcm9tcHQvcHJvamVjdC1vdmVydmlldy50eHQ6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9wcm9tcHQvcHJvamVjdC1vdmVydmlldy50eHQKICAgIGRlc2NyaXB0aW9uOiBIaWdoLWxldmVsIHByb2plY3Qgb3ZlcnZpZXcKICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBBcHAudHN4OgogICAgcGVybWFsaW5rOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvQXBwLnRzeAogICAgZGVzY3JpcHRpb246IEFwcGxpY2F0aW9uIGVudHJ5cG9pbnQKICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBzcmMvY29tcG9uZW50cy9WZXJpZnlCYW5uZXIudHN4OgogICAgcGVybWFsaW5rOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvc3JjL2NvbXBvbmVudHMvVmVyaWZ5QmFubmVyLnRzeAogICAgZGVzY3JpcHRpb246IEJhbm5lciBwcm9tcHRpbmcgZW1haWwgdmVyaWZpY2F0aW9uCiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgc3JjL25hdmlnYXRpb24vQXV0aFN0YWNrLnRzeDoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy9uYXZpZ2F0aW9uL0F1dGhTdGFjay50c3gKICAgIGRlc2NyaXB0aW9uOiBBdXRoZW50aWNhdGlvbiBmbG93IHN0YWNrCiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgc3JjL25hdmlnYXRpb24vTWFpblRhYnMudHN4OgogICAgcGVybWFsaW5rOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvc3JjL25hdmlnYXRpb24vTWFpblRhYnMudHN4CiAgICBkZXNjcmlwdGlvbjogTWFpbiBhcHBsaWNhdGlvbiB0YWIgbmF2aWdhdG9yCiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgc3JjL25hdmlnYXRpb24vT25ib2FyZGluZ1N0YWNrLnRzeDoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy9uYXZpZ2F0aW9uL09uYm9hcmRpbmdTdGFjay50c3gKICAgIGRlc2NyaXB0aW9uOiBPbmJvYXJkaW5nIGZsb3cgc3RhY2sKICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBzcmMvbmF2aWdhdGlvbi9Sb290TmF2aWdhdG9yLnRzeDoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy9uYXZpZ2F0aW9uL1Jvb3ROYXZpZ2F0b3IudHN4CiAgICBkZXNjcmlwdGlvbjogUm9vdCBuYXZpZ2F0aW9uIGNvbnRhaW5lciBhbmQgZ2F0ZQogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zY3JlZW5zL0hvbWVTY3JlZW4udHN4OgogICAgcGVybWFsaW5rOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvc3JjL3NjcmVlbnMvSG9tZVNjcmVlbi50c3gKICAgIGRlc2NyaXB0aW9uOiBIb21lIGZlZWQgc3VyZmFjZQogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zY3JlZW5zL0xhbmd1YWdlU2VsZWN0aW9uU2NyZWVuLnRzeDoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy9zY3JlZW5zL0xhbmd1YWdlU2VsZWN0aW9uU2NyZWVuLnRzeAogICAgZGVzY3JpcHRpb246IExhbmd1YWdlIHNlbGVjdGlvbiBVSQogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zY3JlZW5zL0xpYnJhcnlTY3JlZW4udHN4OgogICAgcGVybWFsaW5rOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvc3JjL3NjcmVlbnMvTGlicmFyeVNjcmVlbi50c3gKICAgIGRlc2NyaXB0aW9uOiBTYXZlZCBpdGVtcyBhbmQgbGlicmFyeQogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zY3JlZW5zL0xvZ2luU2NyZWVuLnRzeDoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy9zY3JlZW5zL0xvZ2luU2NyZWVuLnRzeAogICAgZGVzY3JpcHRpb246IExvZ2luIFVJIGFuZCBoYW5kbGVycwogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zY3JlZW5zL09uYm9hcmRpbmdTY3JlZW4udHN4OgogICAgcGVybWFsaW5rOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvc3JjL3NjcmVlbnMvT25ib2FyZGluZ1NjcmVlbi50c3gKICAgIGRlc2NyaXB0aW9uOiBPbmJvYXJkaW5nIGNhcm91c2VsIG9yIGludHJvCiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgc3JjL3NjcmVlbnMvUGFzc3dvcmRSZXNldFNjcmVlbi50c3g6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9zcmMvc2NyZWVucy9QYXNzd29yZFJlc2V0U2NyZWVuLnRzeAogICAgZGVzY3JpcHRpb246IFBhc3N3b3JkIHJlc2V0IFVJIGFuZCBmbG93CiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgc3JjL3NjcmVlbnMvUHJvZmlsZVNjcmVlbi50c3g6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9zcmMvc2NyZWVucy9Qcm9maWxlU2NyZWVuLnRzeAogICAgZGVzY3JpcHRpb246IFVzZXIgcHJvZmlsZSBhbmQgc2V0dGluZ3MKICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBzcmMvc2NyZWVucy9TZWFyY2hTY3JlZW4udHN4OgogICAgcGVybWFsaW5rOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvc3JjL3NjcmVlbnMvU2VhcmNoU2NyZWVuLnRzeAogICAgZGVzY3JpcHRpb246IFNlYXJjaCBVSSBhbmQgcmVzdWx0cwogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zY3JlZW5zL1NpZ251cFNjcmVlbi50c3g6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9zcmMvc2NyZWVucy9TaWdudXBTY3JlZW4udHN4CiAgICBkZXNjcmlwdGlvbjogU2lnbnVwIFVJIGFuZCBoYW5kbGVycwogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zY3JlZW5zL1NwbGFzaFNjcmVlbi50c3g6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9zcmMvc2NyZWVucy9TcGxhc2hTY3JlZW4udHN4CiAgICBkZXNjcmlwdGlvbjogQXBwIHNwbGFzaCBhbmQgYm9vdHN0cmFwIGxvZ2ljCiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgc3JjL3NlcnZpY2VzL2FuYWx5dGljcy50czoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy9zZXJ2aWNlcy9hbmFseXRpY3MudHMKICAgIGRlc2NyaXB0aW9uOiBBbmFseXRpY3MgaGVscGVycyBhbmQgd3JhcHBlcnMKICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBzcmMvc2VydmljZXMvY3Jhc2hseXRpY3MudHM6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9zcmMvc2VydmljZXMvY3Jhc2hseXRpY3MudHMKICAgIGRlc2NyaXB0aW9uOiBDcmFzaGx5dGljcyBoZWxwZXJzIGFuZCB3cmFwcGVycwogICAgbGFzdFVwZGF0ZWQ6IDIwMjUtMDgtMjQKICAgIHZlcnNpb246IDEuMC4wCgogIHNyYy9zZXJ2aWNlcy9maXJlYmFzZS50czoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy9zZXJ2aWNlcy9maXJlYmFzZS50cwogICAgZGVzY3JpcHRpb246IEZpcmViYXNlIGluaXRpYWxpemF0aW9uIGFuZCBleHBvcnRzCiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKCiAgc3JjL3V0aWxzL2kxOG4udHM6CiAgICBwZXJtYWxpbms6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9zcmMvdXRpbHMvaTE4bi50cwogICAgZGVzY3JpcHRpb246IGkxOG4gc2V0dXAgYW5kIHJlc291cmNlcyBsb2FkZXIKICAgIGxhc3RVcGRhdGVkOiAyMDI1LTA4LTI0CiAgICB2ZXJzaW9uOiAxLjAuMAoKICBzcmMvdXRpbHMvc3RvcmFnZS50czoKICAgIHBlcm1hbGluazogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3NyYy91dGlscy9zdG9yYWdlLnRzCiAgICBkZXNjcmlwdGlvbjogQXN5bmMgc3RvcmFnZSBoZWxwZXJzCiAgICBsYXN0VXBkYXRlZDogMjAyNS0wOC0yNAogICAgdmVyc2lvbjogMS4wLjAKICAgIA=="
    },
    {
      "path": "prompt/project-overview.txt",
      "base64": "R3lwc2lmeSDigJQgUHJvamVjdCBPdmVydmlldyAoZGV2KQoyMDI1LTA4LTI0CgpTdGF0dXMKLSBDdXJyZW50IHBoYXNlOiBQaGFzZSAzIOKAlCBBdXRoZW50aWNhdGlvbiAmIEZpcmViYXNlCi0gUmVjZW50IGNoYW5nZXM6IE1hc3RlclByb21wdCB1cGRhdGVkOyBjaGVja2xpc3QubWQgdjEuMi4wOyBtaW5pLW1hbmlmZXN0IG5vcm1hbGl6ZWQgdG8gcmF3IHBlcm1hbGlua3MKLSBTY29wZSBndWFyZHJhaWxzOiBPbmx5IC9zcmMgYW5kIC9wcm9tcHQgaW4gc2NvcGUgKHRlc3RzLyBhbmQgZG9jcy8gZXhjbHVkZWQpCgpOZXh0IEFjdGlvbnMgKFBoYXNlIDMpCi0gRmlyZXN0b3JlIHVzZXIgc2NoZW1hIGRvYyArIHNlZWQgc3R1YiAoYWRtaW4sIGFydGlzdCwgbGlzdGVuZXIpCi0gR29vZ2xlIE9BdXRoICh3ZWIgY2xpZW50IElELCBpT1MgVVJMIHNjaGVtZSwgQW5kcm9pZCBTSEEtMjU2KQotIEFwcGxlIFNpZ24tSW4gKGNhcGFiaWxpdHksIFNlcnZpY2VzIElELCByZXR1cm4gVVJMKQotIFByb2ZpbGUgQ1JVRCAoYXZhdGFyIHVwbG9hZCB2YWxpZGF0aW9uLCB1c2VybmFtZSB1bmlxdWUsIGJpbyBsaW1pdHM7IG9wdGltaXN0aWMgVUkpCi0gVmVyaWZ5QmFubmVyIGludGVncmF0ZWQgd2hlbiAhZW1haWxWZXJpZmllZDsgQ1RBIG9wZW5zIG1haWw7IHJlc2VuZCB0aHJvdHRsZWQKLSBTZWN1cml0eSBydWxlcyB0ZXN0cyBvbiBlbXVsYXRvciAocm9sZSDDlyBhY3Rpb24gbWF0cml4KQotIEFuYWx5dGljcyBEZWJ1Z1ZpZXcgY2hlY2sgKGF1dGggZnVubmVsKTsgQ3Jhc2hseXRpY3Mgbm9uLWZhdGFsIHNtb2tlCi0gdXNlclNsaWNlIHdpdGggcmVkdXgtcGVyc2lzdDsgbWlncmF0aW9ucyBzdHViIGF0IHNyYy9zZXJ2aWNlcy9taWdyYXRpb25zLwoKRW52aXJvbm1lbnQgJiBLZXlzCi0gRVhQT19QVUJMSUNfKiBmbGFncwotIEZpcmViYXNlIHdlYiBjb25maWcKLSBHb29nbGU6IHdlYiBjbGllbnQgSUQgKyByZXZlcnNlZCBpT1MgVVJMIHNjaGVtZSArIEFuZHJvaWQgU0hBLTI1NgotIEFwcGxlOiBTZXJ2aWNlcyBJRCArIHJldHVybiBVUkwKLSAuZW52LmRldmVsb3BtZW50IC8gLmVudi5wcm9kdWN0aW9uIHByZXNlbnQKClRvb2xjaGFpbgotIE5vZGUgMjAuMTkuNCDigKIgWWFybiAxLjIyLjIyIOKAoiBFeHBvIFNESyA1My54Ci0gVFMgc3RyaWN0ICsgQC8qIGFsaWFzIOKAoiBFU0xpbnQgKyBQcmV0dGllciDigKIgTmF0aXZlV2luZC9UYWlsd2luZAoKUXVhbGl0eSBHYXRlcwotIFN0ZXAgR2F0ZSArIERlZmluaXRpb24gb2YgRG9uZSBmcm9tIGNoZWNrbGlzdC5tZAotIEFjY2Vzc2liaWxpdHkgcXVpY2sgcGFzcyDigKIgQnVuZGxlIGd6IDwgMS44IE1CIOKAoiBMZWFzdC1wcml2aWxlZ2UgcnVsZXMg4oCiIE5vIFBJSSBpbiBsb2dzCgpLZXkgTGlua3MKLSBNYXN0ZXJQcm9tcHQ6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Kb3NlcGhKb3JkYW5VSy9neXBzaWZ5L2Rldi9wcm9tcHQvTWFzdGVyUHJvbXB0Lm1kCi0gQ2hlY2tsaXN0OiAgICAgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvc2VwaEpvcmRhblVLL2d5cHNpZnkvZGV2L3Byb21wdC9jaGVja2xpc3QubWQKLSBNaW5pLW1hbmlmZXN0OiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSm9zZXBoSm9yZGFuVUsvZ3lwc2lmeS9kZXYvcHJvbXB0L21pbmktbWFuaWZlc3QueW1sCgpUcmFja2VyCi0gUmVmcmVzaCB0cmFja2VyL2RldiBhcnRpZmFjdHMgYWZ0ZXIgdGhlIG5leHQgY29tbWl0IChsYXRlc3Qtc2hhLnR4dCwgY2hhbmdlZC1pbi1sYXRlc3QuanNvbiwgbGF0ZXN0LWJ1bmRsZS5qc29uKQoKUmVwbyBUcmVlIChjdXJyZW50KQovCuKUnOKUgCAuZWRpdG9yY29uZmlnCuKUnOKUgCAuZW52CuKUnOKUgCAuZmlyZWJhc2VyYwrilJzilIAgLmdpdGlnbm9yZQrilJzilIAgLm52bXJjCuKUnOKUgCAucHJldHRpZXJpZ25vcmUK4pSc4pSAIC5wcmV0dGllcnJjLmpzb24K4pSc4pSAIGFwcC5qc29uCuKUnOKUgCBBcHAudHN4CuKUnOKUgCBiYWJlbC5jb25maWcuanMK4pSc4pSAIGVzbGludC5jb25maWcuY2pzCuKUnOKUgCBmaXJlYmFzZS5qc29uCuKUnOKUgCBmaXJlc3RvcmUuaW5kZXhlcy5qc29uCuKUnOKUgCBpbmRleC50cwrilJzilIAgbWV0cm8uY29uZmlnLmpzCuKUnOKUgCBwYWNrYWdlLmpzb24K4pSc4pSAIFJFQURNRS5tZArilJzilIAgdHNjb25maWcuanNvbgrilJzilIAgeWFybi5sb2NrCuKUnOKUgCAuZ2l0aHViLwrilIIgIOKUnOKUgCB3b3JrZmxvd3MubWQK4pSCICDilIIgIOKUnOKUgCBjaS55bWwK4pSCICDilIIgIOKUnOKUgCB0cmFja2VyLnltbArilIIgIOKUlOKUgCBkZXBlbmRhYm90LnltbArilJzilIAgcHJvbXB0LwrilIIgIOKUnOKUgCBjaGFuZ2VkLWluLWxhdGVzdC5qc29uCuKUgiAg4pSc4pSAIGNoZWNrbGlzdC5tZArilIIgIOKUnOKUgCBmaWxlLWxpc3QudHh0CuKUgiAg4pSc4pSAIGZpcmVzdG9yZS5ydWxlcwrilIIgIOKUnOKUgCBsYXRlc3Qtc2hhLnR4dArilIIgIOKUnOKUgCBtYW5pZmVzdC5qc29uCuKUgiAg4pSc4pSAIE1hc3RlclByb21wdC5tZArilIIgIOKUnOKUgCBtaW5pLW1hbmlmZXN0LnltbArilIIgIOKUlOKUgCBwcm9qZWN0LW92ZXJ2aWV3LnR4dArilJTilIAgc3JjLwogICDilJzilIAgY29tcG9uZW50cy8KICAg4pSCICDilJTilIAgVmVyaWZ5QmFubmVyLnRzeAogICDilJzilIAgbmF2aWdhdGlvbi8KICAg4pSCICDilJzilIAgQXV0aFN0YWNrLnRzeAogICDilIIgIOKUnOKUgCBNYWluVGFicy50c3gKICAg4pSCICDilJzilIAgT25ib2FyZGluZ1N0YWNrLnRzeAogICDilIIgIOKUlOKUgCBSb290TmF2aWdhdG9yLnRzeAogICDilJzilIAgc2NyZWVucy8KICAg4pSCICDilJzilIAgSG9tZVNjcmVlbi50c3gKICAg4pSCICDilJzilIAgTGFuZ3VhZ2VTZWxlY3Rpb25TY3JlZW4udHN4CiAgIOKUgiAg4pSc4pSAIExpYnJhcnlTY3JlZW4udHN4CiAgIOKUgiAg4pSc4pSAIExvZ2luU2NyZWVuLnRzeAogICDilIIgIOKUnOKUgCBPbmJvYXJkaW5nU2NyZWVuLnRzeAogICDilIIgIOKUnOKUgCBQYXNzd29yZFJlc2V0U2NyZWVuLnRzeAogICDilIIgIOKUnOKUgCBQcm9maWxlU2NyZWVuLnRzeAogICDilIIgIOKUnOKUgCBTZWFyY2hTY3JlZW4udHN4CiAgIOKUgiAg4pSc4pSAIFNpZ251cFNjcmVlbi50c3gKICAg4pSCICDilJTilIAgU3BsYXNoU2NyZWVuLnRzeAogICDilJzilIAgc2VydmljZXMvCiAgIOKUgiAg4pSc4pSAIGFuYWx5dGljcy50cwogICDilIIgIOKUnOKUgCBjcmFzaGx5dGljcy50cwogICDilIIgIOKUlOKUgCBmaXJlYmFzZS50cwogICDilJzilIAgdXRpbHMvCiAgIOKUgiAg4pSc4pSAIGkxOG4udHMKICAg4pSCICDilJTilIAgc3RvcmFnZS50cwogICDilJzilIAgZG9jcy8KICAg4pSCICDilJTilIAgc3Nlc3Npb24tY2xvc2VvdXQubWQKICAg4pSc4pSAIGhvb2tzLwogICDilJzilIAgc3RvcmUvCiAgIOKUlOKUgCBzdHlsZXMvCgoKTm90ZXMKLSBUeXBvIGxpa2VseTogYHNyYy9kb2NzL3NzZXNzaW9uLWNsb3Nlb3V0Lm1kYCDihpIgYHNlc3Npb24tY2xvc2VvdXQubWRgLgotIENvbnNpZGVyIG1vdmluZyBgc3JjL2RvY3MvYCB0byBgL2RvY3NgIHNvIGl0IHN0YXlzIGV4Y2x1ZGVkIHBlciBzY29wZSBydWxlcy4KIyB0cmlnZ2VyCiMgdHJhY2tlciB0cmlnZ2VyIDIwMjUtMDgtMjVUMTY6MDU6MDlaCg=="
    },
    {
      "path": "src/__tracker_ping__.ts",
      "base64": "Ly8gdHJhY2tlciBwaW5nIFR1ZSBBdWcgMjYgMDI6NTQ6MjQgQlNUIDIwMjUK"
    },
    {
      "path": "src/components/VerifyBanner.tsx",
      "base64": "aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBWaWV3LCBUZXh0LCBQcmVzc2FibGUsIEFjdGl2aXR5SW5kaWNhdG9yLCBBbGVydCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7CmltcG9ydCB7IGF1dGggfSBmcm9tICcuLi9zZXJ2aWNlcy9maXJlYmFzZSc7CmltcG9ydCB7IHNlbmRFbWFpbFZlcmlmaWNhdGlvbiwgcmVsb2FkIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7CmltcG9ydCB7IEZpcmViYXNlRXJyb3IgfSBmcm9tICdmaXJlYmFzZS9hcHAnOwppbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnOwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVmVyaWZ5QmFubmVyKCkgewogIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTsKICBjb25zdCBbc2VuZGluZywgc2V0U2VuZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7CiAgY29uc3QgW3JlZnJlc2hpbmcsIHNldFJlZnJlc2hpbmddID0gdXNlU3RhdGUoZmFsc2UpOwogIGNvbnN0IFssIGZvcmNlUmVuZGVyXSA9IHVzZVN0YXRlKDApOwoKICBjb25zdCB1c2VyID0gYXV0aC5jdXJyZW50VXNlcjsKICBjb25zdCBzaG93ID0gISF1c2VyICYmICF1c2VyLmVtYWlsVmVyaWZpZWQ7CiAgaWYgKCFzaG93KSByZXR1cm4gbnVsbDsKCiAgY29uc3QgaGFuZGxlUmVzZW5kID0gYXN5bmMgKCkgPT4gewogICAgaWYgKCF1c2VyKSByZXR1cm47CiAgICBzZXRTZW5kaW5nKHRydWUpOwogICAgdHJ5IHsKICAgICAgYXdhaXQgc2VuZEVtYWlsVmVyaWZpY2F0aW9uKHVzZXIpOwogICAgICBBbGVydC5hbGVydCh0KCdhdXRoLnZlcmlmeUJhbm5lci5zZW50VGl0bGUnKSwgdCgnYXV0aC52ZXJpZnlCYW5uZXIuc2VudE1zZycpKTsKICAgIH0gY2F0Y2ggKGVycjogdW5rbm93bikgewogICAgICBjb25zdCBtc2cgPQogICAgICAgIGVyciBpbnN0YW5jZW9mIEZpcmViYXNlRXJyb3IgPyBlcnIubWVzc2FnZSA6IHQoJ2F1dGgudmVyaWZ5QmFubmVyLnNlbmRFcnJvcicpOwogICAgICBBbGVydC5hbGVydCgnRXJyb3InLCBtc2cpOwogICAgfSBmaW5hbGx5IHsKICAgICAgc2V0U2VuZGluZyhmYWxzZSk7CiAgICB9CiAgfTsKCiAgY29uc3QgaGFuZGxlUmVmcmVzaCA9IGFzeW5jICgpID0+IHsKICAgIGlmICghYXV0aC5jdXJyZW50VXNlcikgcmV0dXJuOwogICAgc2V0UmVmcmVzaGluZyh0cnVlKTsKICAgIHRyeSB7CiAgICAgIGF3YWl0IHJlbG9hZChhdXRoLmN1cnJlbnRVc2VyKTsKICAgICAgZm9yY2VSZW5kZXIoKG4pID0+IG4gKyAxKTsKICAgIH0gY2F0Y2ggKGVycjogdW5rbm93bikgewogICAgICBjb25zdCBtc2cgPQogICAgICAgIGVyciBpbnN0YW5jZW9mIEZpcmViYXNlRXJyb3IgPyBlcnIubWVzc2FnZSA6IHQoJ2F1dGgudmVyaWZ5QmFubmVyLnJlZnJlc2hFcnJvcicpOwogICAgICBBbGVydC5hbGVydCgnRXJyb3InLCBtc2cpOwogICAgfSBmaW5hbGx5IHsKICAgICAgc2V0UmVmcmVzaGluZyhmYWxzZSk7CiAgICB9CiAgfTsKCiAgcmV0dXJuICgKICAgIDxWaWV3CiAgICAgIHN0eWxlPXt7CiAgICAgICAgd2lkdGg6ICcxMDAlJywKICAgICAgICBib3JkZXJXaWR0aDogMSwKICAgICAgICBib3JkZXJDb2xvcjogJyNmMWM0MGYnLAogICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmZiZTYnLAogICAgICAgIHBhZGRpbmc6IDEyLAogICAgICAgIGJvcmRlclJhZGl1czogMTIsCiAgICAgIH19CiAgICA+CiAgICAgIDxUZXh0IHN0eWxlPXt7IGZvbnRXZWlnaHQ6ICc3MDAnLCBtYXJnaW5Cb3R0b206IDYgfX0+CiAgICAgICAge3QoJ2F1dGgudmVyaWZ5QmFubmVyLnRpdGxlJyl9CiAgICAgIDwvVGV4dD4KICAgICAgPFRleHQgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAxMCB9fT57dXNlcj8uZW1haWx9PC9UZXh0PgogICAgICA8VmlldyBzdHlsZT17eyBmbGV4RGlyZWN0aW9uOiAncm93JyB9fT4KICAgICAgICA8UHJlc3NhYmxlCiAgICAgICAgICBvblByZXNzPXtoYW5kbGVSZXNlbmR9CiAgICAgICAgICBkaXNhYmxlZD17c2VuZGluZ30KICAgICAgICAgIHN0eWxlPXt7CiAgICAgICAgICAgIHBhZGRpbmdWZXJ0aWNhbDogMTAsCiAgICAgICAgICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNCwKICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMCwKICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzExMScsCiAgICAgICAgICAgIG9wYWNpdHk6IHNlbmRpbmcgPyAwLjcgOiAxLAogICAgICAgICAgICBtYXJnaW5SaWdodDogMTIsCiAgICAgICAgICB9fQogICAgICAgID4KICAgICAgICAgIHtzZW5kaW5nID8gKAogICAgICAgICAgICA8QWN0aXZpdHlJbmRpY2F0b3IgLz4KICAgICAgICAgICkgOiAoCiAgICAgICAgICAgIDxUZXh0IHN0eWxlPXt7IGNvbG9yOiAnI2ZmZicsIGZvbnRXZWlnaHQ6ICc2MDAnIH19Pnt0KCdhdXRoLnZlcmlmeUJhbm5lci5yZXNlbmQnKX08L1RleHQ+CiAgICAgICAgICApfQogICAgICAgIDwvUHJlc3NhYmxlPgoKICAgICAgICA8UHJlc3NhYmxlCiAgICAgICAgICBvblByZXNzPXtoYW5kbGVSZWZyZXNofQogICAgICAgICAgZGlzYWJsZWQ9e3JlZnJlc2hpbmd9CiAgICAgICAgICBzdHlsZT17ewogICAgICAgICAgICBwYWRkaW5nVmVydGljYWw6IDEwLAogICAgICAgICAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTQsCiAgICAgICAgICAgIGJvcmRlclJhZGl1czogMTAsCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNlMGUwZTAnLAogICAgICAgICAgICBvcGFjaXR5OiByZWZyZXNoaW5nID8gMC43IDogMSwKICAgICAgICAgIH19CiAgICAgICAgPgogICAgICAgICAge3JlZnJlc2hpbmcgPyAoCiAgICAgICAgICAgIDxBY3Rpdml0eUluZGljYXRvciAvPgogICAgICAgICAgKSA6ICgKICAgICAgICAgICAgPFRleHQgc3R5bGU9e3sgZm9udFdlaWdodDogJzYwMCcgfX0+e3QoJ2F1dGgudmVyaWZ5QmFubmVyLnJlZnJlc2gnKX08L1RleHQ+CiAgICAgICAgICApfQogICAgICAgIDwvUHJlc3NhYmxlPgogICAgICA8L1ZpZXc+CiAgICA8L1ZpZXc+CiAgKTsKfQ=="
    },
    {
      "path": "src/navigation/AuthStack.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgY3JlYXRlTmF0aXZlU3RhY2tOYXZpZ2F0b3IgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUtc3RhY2snOwoKaW1wb3J0IExvZ2luU2NyZWVuIGZyb20gJy4uL3NjcmVlbnMvTG9naW5TY3JlZW4nOwppbXBvcnQgU2lnbnVwU2NyZWVuIGZyb20gJy4uL3NjcmVlbnMvU2lnbnVwU2NyZWVuJzsKaW1wb3J0IFBhc3N3b3JkUmVzZXRTY3JlZW4gZnJvbSAnLi4vc2NyZWVucy9QYXNzd29yZFJlc2V0U2NyZWVuJzsKCmV4cG9ydCB0eXBlIEF1dGhTdGFja1BhcmFtTGlzdCA9IHsKICBMb2dpbjogdW5kZWZpbmVkOwogIFNpZ251cDogdW5kZWZpbmVkOwogIFBhc3N3b3JkUmVzZXQ6IHVuZGVmaW5lZDsKfTsKCmNvbnN0IFN0YWNrID0gY3JlYXRlTmF0aXZlU3RhY2tOYXZpZ2F0b3I8QXV0aFN0YWNrUGFyYW1MaXN0PigpOwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXV0aFN0YWNrKCkgewogIHJldHVybiAoCiAgICA8U3RhY2suTmF2aWdhdG9yIGlkPXt1bmRlZmluZWR9IHNjcmVlbk9wdGlvbnM9e3sgaGVhZGVyU2hvd246IGZhbHNlIH19IGluaXRpYWxSb3V0ZU5hbWU9IkxvZ2luIj4KICAgICAgPFN0YWNrLlNjcmVlbiBuYW1lPSJMb2dpbiIgY29tcG9uZW50PXtMb2dpblNjcmVlbn0gLz4KICAgICAgPFN0YWNrLlNjcmVlbiBuYW1lPSJTaWdudXAiIGNvbXBvbmVudD17U2lnbnVwU2NyZWVufSAvPgogICAgICA8U3RhY2suU2NyZWVuIG5hbWU9IlBhc3N3b3JkUmVzZXQiIGNvbXBvbmVudD17UGFzc3dvcmRSZXNldFNjcmVlbn0gLz4KICAgIDwvU3RhY2suTmF2aWdhdG9yPgogICk7Cn0="
    },
    {
      "path": "src/navigation/MainTabs.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgY3JlYXRlQm90dG9tVGFiTmF2aWdhdG9yIH0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vYm90dG9tLXRhYnMnOwppbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnOwoKaW1wb3J0IEhvbWVTY3JlZW4gZnJvbSAnLi4vc2NyZWVucy9Ib21lU2NyZWVuJzsKaW1wb3J0IFNlYXJjaFNjcmVlbiBmcm9tICcuLi9zY3JlZW5zL1NlYXJjaFNjcmVlbic7CmltcG9ydCBMaWJyYXJ5U2NyZWVuIGZyb20gJy4uL3NjcmVlbnMvTGlicmFyeVNjcmVlbic7CmltcG9ydCBQcm9maWxlU2NyZWVuIGZyb20gJy4uL3NjcmVlbnMvUHJvZmlsZVNjcmVlbic7CgpleHBvcnQgdHlwZSBNYWluVGFiUGFyYW1MaXN0ID0gewogIEhvbWU6IHVuZGVmaW5lZDsKICBTZWFyY2g6IHVuZGVmaW5lZDsKICBMaWJyYXJ5OiB1bmRlZmluZWQ7CiAgUHJvZmlsZTogdW5kZWZpbmVkOwp9OwoKY29uc3QgVGFiID0gY3JlYXRlQm90dG9tVGFiTmF2aWdhdG9yPE1haW5UYWJQYXJhbUxpc3Q+KCk7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNYWluVGFicygpIHsKICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7CgogIHJldHVybiAoCiAgICA8VGFiLk5hdmlnYXRvcgogICAgICBpZD17dW5kZWZpbmVkfQogICAgICBzY3JlZW5PcHRpb25zPXsoeyByb3V0ZSB9KSA9PiAoewogICAgICAgIGhlYWRlclNob3duOiBmYWxzZSwKICAgICAgICB0YWJCYXJMYWJlbDoKICAgICAgICAgIHJvdXRlLm5hbWUgPT09ICdIb21lJwogICAgICAgICAgICA/IHQoJ3RhYnMuaG9tZScpCiAgICAgICAgICAgIDogcm91dGUubmFtZSA9PT0gJ1NlYXJjaCcKICAgICAgICAgICAgPyB0KCd0YWJzLnNlYXJjaCcpCiAgICAgICAgICAgIDogcm91dGUubmFtZSA9PT0gJ0xpYnJhcnknCiAgICAgICAgICAgID8gdCgndGFicy5saWJyYXJ5JykKICAgICAgICAgICAgOiB0KCd0YWJzLnByb2ZpbGUnKSwKICAgICAgfSl9CiAgICA+CiAgICAgIDxUYWIuU2NyZWVuIG5hbWU9IkhvbWUiIGNvbXBvbmVudD17SG9tZVNjcmVlbn0gLz4KICAgICAgPFRhYi5TY3JlZW4gbmFtZT0iU2VhcmNoIiBjb21wb25lbnQ9e1NlYXJjaFNjcmVlbn0gLz4KICAgICAgPFRhYi5TY3JlZW4gbmFtZT0iTGlicmFyeSIgY29tcG9uZW50PXtMaWJyYXJ5U2NyZWVufSAvPgogICAgICA8VGFiLlNjcmVlbiBuYW1lPSJQcm9maWxlIiBjb21wb25lbnQ9e1Byb2ZpbGVTY3JlZW59IC8+CiAgICA8L1RhYi5OYXZpZ2F0b3I+CiAgKTsKfQ=="
    },
    {
      "path": "src/navigation/OnboardingStack.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgY3JlYXRlTmF0aXZlU3RhY2tOYXZpZ2F0b3IgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUtc3RhY2snOwoKaW1wb3J0IFNwbGFzaFNjcmVlbiBmcm9tICcuLi9zY3JlZW5zL1NwbGFzaFNjcmVlbic7CmltcG9ydCBMYW5ndWFnZVNlbGVjdGlvblNjcmVlbiBmcm9tICcuLi9zY3JlZW5zL0xhbmd1YWdlU2VsZWN0aW9uU2NyZWVuJzsKCmV4cG9ydCB0eXBlIE9uYm9hcmRpbmdTdGFja1BhcmFtTGlzdCA9IHsKICBTcGxhc2g6IHVuZGVmaW5lZDsKICBMYW5ndWFnZTogdW5kZWZpbmVkOwp9OwoKY29uc3QgU3RhY2sgPSBjcmVhdGVOYXRpdmVTdGFja05hdmlnYXRvcjxPbmJvYXJkaW5nU3RhY2tQYXJhbUxpc3Q+KCk7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBPbmJvYXJkaW5nU3RhY2soKSB7CiAgcmV0dXJuICgKICAgIDxTdGFjay5OYXZpZ2F0b3IgaWQ9e3VuZGVmaW5lZH0gc2NyZWVuT3B0aW9ucz17eyBoZWFkZXJTaG93bjogZmFsc2UgfX0gaW5pdGlhbFJvdXRlTmFtZT0iU3BsYXNoIj4KICAgICAgPFN0YWNrLlNjcmVlbiBuYW1lPSJTcGxhc2giIGNvbXBvbmVudD17U3BsYXNoU2NyZWVufSAvPgogICAgICA8U3RhY2suU2NyZWVuIG5hbWU9Ikxhbmd1YWdlIiBjb21wb25lbnQ9e0xhbmd1YWdlU2VsZWN0aW9uU2NyZWVufSAvPgogICAgPC9TdGFjay5OYXZpZ2F0b3I+CiAgKTsKfQ=="
    },
    {
      "path": "src/navigation/RootNavigator.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgTmF2aWdhdGlvbkNvbnRhaW5lciB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7CmltcG9ydCB7IGNyZWF0ZU5hdGl2ZVN0YWNrTmF2aWdhdG9yIH0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlLXN0YWNrJzsKCmltcG9ydCBNYWluVGFicyBmcm9tICcuL01haW5UYWJzJzsKaW1wb3J0IEF1dGhTdGFjayBmcm9tICcuL0F1dGhTdGFjayc7CmltcG9ydCBPbmJvYXJkaW5nU3RhY2sgZnJvbSAnLi9PbmJvYXJkaW5nU3RhY2snOwoKZXhwb3J0IHR5cGUgUm9vdFN0YWNrUGFyYW1MaXN0ID0gewogIE9uYm9hcmRpbmc6IHVuZGVmaW5lZDsKICBBdXRoOiB1bmRlZmluZWQ7CiAgTWFpbjogdW5kZWZpbmVkOwp9OwoKY29uc3QgU3RhY2sgPSBjcmVhdGVOYXRpdmVTdGFja05hdmlnYXRvcjxSb290U3RhY2tQYXJhbUxpc3Q+KCk7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TmF2aWdhdG9yKCkgewogIHJldHVybiAoCiAgICA8TmF2aWdhdGlvbkNvbnRhaW5lcj4KICAgICAgPFN0YWNrLk5hdmlnYXRvciBpZD17dW5kZWZpbmVkfSBzY3JlZW5PcHRpb25zPXt7IGhlYWRlclNob3duOiBmYWxzZSB9fSBpbml0aWFsUm91dGVOYW1lPSJPbmJvYXJkaW5nIj4KICAgICAgICA8U3RhY2suU2NyZWVuIG5hbWU9Ik9uYm9hcmRpbmciIGNvbXBvbmVudD17T25ib2FyZGluZ1N0YWNrfSAvPgogICAgICAgIDxTdGFjay5TY3JlZW4gbmFtZT0iQXV0aCIgY29tcG9uZW50PXtBdXRoU3RhY2t9IC8+CiAgICAgICAgPFN0YWNrLlNjcmVlbiBuYW1lPSJNYWluIiBjb21wb25lbnQ9e01haW5UYWJzfSAvPgogICAgICA8L1N0YWNrLk5hdmlnYXRvcj4KICAgIDwvTmF2aWdhdGlvbkNvbnRhaW5lcj4KICApOwp9"
    },
    {
      "path": "src/screens/HomeScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgU2FmZUFyZWFWaWV3LCBWaWV3LCBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJzsKaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JzsKaW1wb3J0IFZlcmlmeUJhbm5lciBmcm9tICcuLi9jb21wb25lbnRzL1ZlcmlmeUJhbm5lcic7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lU2NyZWVuKCkgewogIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTsKCiAgcmV0dXJuICgKICAgIDxTYWZlQXJlYVZpZXcgc3R5bGU9e3sgZmxleDogMSB9fT4KICAgICAgPFZpZXcgc3R5bGU9e3sgcGFkZGluZzogMTYgfX0+CiAgICAgICAgPFZlcmlmeUJhbm5lciAvPgogICAgICA8L1ZpZXc+CgogICAgICA8VmlldwogICAgICAgIHN0eWxlPXt7CiAgICAgICAgICBmbGV4OiAxLAogICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLAogICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsCiAgICAgICAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTYsCiAgICAgICAgfX0KICAgICAgPgogICAgICAgIDxUZXh0IHN0eWxlPXt7IGZvbnRTaXplOiAyNCwgZm9udFdlaWdodDogJzcwMCcsIG1hcmdpbkJvdHRvbTogOCB9fT4KICAgICAgICAgIHt0KCdob21lLnRpdGxlJyl9CiAgICAgICAgPC9UZXh0PgogICAgICAgIDxUZXh0Pnt0KCdob21lLndlbGNvbWUnKX08L1RleHQ+CiAgICAgIDwvVmlldz4KICAgIDwvU2FmZUFyZWFWaWV3PgogICk7Cn0="
    },
    {
      "path": "src/screens/LanguageSelectionScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBWaWV3LCBUZXh0LCBQcmVzc2FibGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnOwppbXBvcnQgeyBDb21tb25BY3Rpb25zIH0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJzsKaW1wb3J0IHR5cGUgeyBOYXRpdmVTdGFja1NjcmVlblByb3BzIH0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlLXN0YWNrJzsKaW1wb3J0IHR5cGUgeyBPbmJvYXJkaW5nU3RhY2tQYXJhbUxpc3QgfSBmcm9tICcuLi9uYXZpZ2F0aW9uL09uYm9hcmRpbmdTdGFjayc7CmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7CmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nOwppbXBvcnQgeyBzZXRBcHBMYW5ndWFnZSwgc2V0T25ib2FyZGluZ0RvbmUgfSBmcm9tICcuLi91dGlscy9zdG9yYWdlJzsKCnR5cGUgUHJvcHMgPSBOYXRpdmVTdGFja1NjcmVlblByb3BzPE9uYm9hcmRpbmdTdGFja1BhcmFtTGlzdCwgJ0xhbmd1YWdlJz47Ci8vIGZlbHQgbGlrZSBzd2l0aGluZyBpdCB1cCBkdWRlCmNvbnN0IExBTkdTID0gWwogIHsgY29kZTogJ2VuJywgbGFiZWxLZXk6ICdsYW5ndWFnZS5lbmdsaXNoJyB9LAogIHsgY29kZTogJ3JvJywgbGFiZWxLZXk6ICdsYW5ndWFnZS5yb21hbmknIH0sCl07CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMYW5ndWFnZVNlbGVjdGlvblNjcmVlbih7IG5hdmlnYXRpb24gfTogUHJvcHMpIHsKICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7CiAgY29uc3QgW3NlbGVjdGVkLCBzZXRTZWxlY3RlZF0gPSB1c2VTdGF0ZShpMThuLmxhbmd1YWdlKTsKCiAgY29uc3QgdG9Sb290ID0gKHJvdXRlOiAnQXV0aCcgfCAnTWFpbicpID0+CiAgICBuYXZpZ2F0aW9uLmdldFBhcmVudCgpPy5kaXNwYXRjaCgKICAgICAgQ29tbW9uQWN0aW9ucy5yZXNldCh7IGluZGV4OiAwLCByb3V0ZXM6IFt7IG5hbWU6IHJvdXRlIH1dIH0pCiAgICApOwoKICBjb25zdCBoYW5kbGVDb250aW51ZSA9IGFzeW5jICgpID0+IHsKICAgIGF3YWl0IHNldEFwcExhbmd1YWdlKHNlbGVjdGVkKTsKICAgIGkxOG4uY2hhbmdlTGFuZ3VhZ2Uoc2VsZWN0ZWQpOwogICAgYXdhaXQgc2V0T25ib2FyZGluZ0RvbmUodHJ1ZSk7CiAgICB0b1Jvb3QoJ0F1dGgnKTsKICB9OwoKICBjb25zdCBoYW5kbGVHdWVzdCA9ICgpID0+IHsKICAgIHRvUm9vdCgnTWFpbicpOwogIH07CgogIHJldHVybiAoCiAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxLCBwYWRkaW5nOiAxNiwgZ2FwOiAxNCwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInIH19PgogICAgICA8VGV4dCBzdHlsZT17eyBmb250U2l6ZTogMjIsIGZvbnRXZWlnaHQ6ICc3MDAnLCBtYXJnaW5Cb3R0b206IDggfX0+CiAgICAgICAge3QoJ2xhbmd1YWdlLmNob29zZScpfQogICAgICA8L1RleHQ+CgogICAgICB7TEFOR1MubWFwKChsKSA9PiAoCiAgICAgICAgPFByZXNzYWJsZQogICAgICAgICAga2V5PXtsLmNvZGV9CiAgICAgICAgICBvblByZXNzPXsoKSA9PiBzZXRTZWxlY3RlZChsLmNvZGUpfQogICAgICAgICAgc3R5bGU9e3sKICAgICAgICAgICAgcGFkZGluZzogMTYsCiAgICAgICAgICAgIGJvcmRlclJhZGl1czogMTIsCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLAogICAgICAgICAgICBib3JkZXJDb2xvcjogc2VsZWN0ZWQgPT09IGwuY29kZSA/ICcjODg4JyA6ICcjY2NjJywKICAgICAgICAgICAgbWFyZ2luQm90dG9tOiAxMiwKICAgICAgICAgIH19CiAgICAgICAgPgogICAgICAgICAgPFRleHQgc3R5bGU9e3sgZm9udFNpemU6IDE2IH19PgogICAgICAgICAgICB7dChsLmxhYmVsS2V5KX0ge3NlbGVjdGVkID09PSBsLmNvZGUgPyAn4pyTJyA6ICcnfQogICAgICAgICAgPC9UZXh0PgogICAgICAgIDwvUHJlc3NhYmxlPgogICAgICApKX0KCiAgICAgIDxQcmVzc2FibGUKICAgICAgICBvblByZXNzPXtoYW5kbGVDb250aW51ZX0KICAgICAgICBzdHlsZT17ewogICAgICAgICAgcGFkZGluZzogMTYsCiAgICAgICAgICBib3JkZXJSYWRpdXM6IDEyLAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzExMScsCiAgICAgICAgICBtYXJnaW5Ub3A6IDgsCiAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJywKICAgICAgICB9fQogICAgICA+CiAgICAgICAgPFRleHQgc3R5bGU9e3sgY29sb3I6ICcjZmZmJywgZm9udFdlaWdodDogJzYwMCcgfX0+CiAgICAgICAgICB7dCgnbGFuZ3VhZ2UuY29udGludWUnKX0KICAgICAgICA8L1RleHQ+CiAgICAgIDwvUHJlc3NhYmxlPgoKICAgICAgPFByZXNzYWJsZSBvblByZXNzPXtoYW5kbGVHdWVzdH0gc3R5bGU9e3sgcGFkZGluZzogMTIsIG1hcmdpblRvcDogMTIsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19PgogICAgICAgIDxUZXh0IHN0eWxlPXt7IHRleHREZWNvcmF0aW9uTGluZTogJ3VuZGVybGluZScgfX0+e3QoJ2xhbmd1YWdlLmd1ZXN0Jyl9PC9UZXh0PgogICAgICA8L1ByZXNzYWJsZT4KICAgIDwvVmlldz4KICApOwp9Cg=="
    },
    {
      "path": "src/screens/LibraryScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgVmlldywgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMaWJyYXJ5U2NyZWVuKCkgewogIHJldHVybiAoCiAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInIH19PgogICAgICA8VGV4dD5MaWJyYXJ5PC9UZXh0PgogICAgPC9WaWV3PgogICk7Cn0K"
    },
    {
      "path": "src/screens/LoginScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBWaWV3LCBUZXh0LCBUZXh0SW5wdXQsIFByZXNzYWJsZSwgQWN0aXZpdHlJbmRpY2F0b3IsIEFsZXJ0IH0gZnJvbSAncmVhY3QtbmF0aXZlJzsKaW1wb3J0IHsgTmF0aXZlU3RhY2tTY3JlZW5Qcm9wcyB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjayc7CmltcG9ydCB7IENvbW1vbkFjdGlvbnMgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnOwppbXBvcnQgeyBzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCwgc2VuZEVtYWlsVmVyaWZpY2F0aW9uIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7CmltcG9ydCB7IEZpcmViYXNlRXJyb3IgfSBmcm9tICdmaXJlYmFzZS9hcHAnOwppbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnOwppbXBvcnQgeyBhdXRoIH0gZnJvbSAnLi4vc2VydmljZXMvZmlyZWJhc2UnOwppbXBvcnQgeyBBdXRoU3RhY2tQYXJhbUxpc3QgfSBmcm9tICcuLi9uYXZpZ2F0aW9uL0F1dGhTdGFjayc7Cgp0eXBlIFByb3BzID0gTmF0aXZlU3RhY2tTY3JlZW5Qcm9wczxBdXRoU3RhY2tQYXJhbUxpc3QsICdMb2dpbic+OwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9naW5TY3JlZW4oeyBuYXZpZ2F0aW9uIH06IFByb3BzKSB7CiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpOwogIGNvbnN0IFtlbWFpbCwgc2V0RW1haWxdID0gdXNlU3RhdGUoJycpOwogIGNvbnN0IFtwYXNzd29yZCwgc2V0UGFzc3dvcmRdID0gdXNlU3RhdGUoJycpOwogIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTsKCiAgY29uc3QgZ29NYWluID0gKCkgPT4KICAgIG5hdmlnYXRpb24uZ2V0UGFyZW50KCk/LmRpc3BhdGNoKAogICAgICBDb21tb25BY3Rpb25zLnJlc2V0KHsgaW5kZXg6IDAsIHJvdXRlczogW3sgbmFtZTogJ01haW4nIH1dIH0pCiAgICApOwoKICBjb25zdCBoYW5kbGVTaWduSW4gPSBhc3luYyAoKSA9PiB7CiAgICBpZiAoIWVtYWlsIHx8ICFwYXNzd29yZCkgewogICAgICBBbGVydC5hbGVydCh0KCdhdXRoLmxvZ2luLm1pc3NpbmcnKSk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHNldExvYWRpbmcodHJ1ZSk7CiAgICB0cnkgewogICAgICBhd2FpdCBzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZChhdXRoLCBlbWFpbC50cmltKCksIHBhc3N3b3JkKTsKICAgICAgY29uc3QgdSA9IGF1dGguY3VycmVudFVzZXI7CgogICAgICBpZiAodSAmJiAhdS5lbWFpbFZlcmlmaWVkKSB7CiAgICAgICAgQWxlcnQuYWxlcnQoCiAgICAgICAgICB0KCdhdXRoLmxvZ2luLm5vdFZlcmlmaWVkVGl0bGUnKSwKICAgICAgICAgIHQoJ2F1dGgubG9naW4ubm90VmVyaWZpZWRNc2cnKSwKICAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIHRleHQ6IHQoJ2F1dGgubG9naW4ucmVzZW5kJyksCiAgICAgICAgICAgICAgb25QcmVzczogYXN5bmMgKCkgPT4gewogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgYXdhaXQgc2VuZEVtYWlsVmVyaWZpY2F0aW9uKHUpOwogICAgICAgICAgICAgICAgICBBbGVydC5hbGVydCh0KCdhdXRoLmxvZ2luLnNlbnRUaXRsZScpLCB0KCdhdXRoLmxvZ2luLnNlbnRNc2cnKSk7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnI6IHVua25vd24pIHsKICAgICAgICAgICAgICAgICAgY29uc3QgbXNnID0KICAgICAgICAgICAgICAgICAgICBlcnIgaW5zdGFuY2VvZiBGaXJlYmFzZUVycm9yCiAgICAgICAgICAgICAgICAgICAgICA/IGVyci5tZXNzYWdlCiAgICAgICAgICAgICAgICAgICAgICA6IHQoJ2F1dGgubG9naW4uZXJyb3JzLmdlbmVyaWMnKTsKICAgICAgICAgICAgICAgICAgQWxlcnQuYWxlcnQoJ0Vycm9yJywgbXNnKTsKICAgICAgICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgICAgICAgIGdvTWFpbigpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgdGV4dDogdCgnYXV0aC5sb2dpbi5jb250aW51ZScpLCBvblByZXNzOiBnb01haW4gfSwKICAgICAgICAgIF0KICAgICAgICApOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgZ29NYWluKCk7CiAgICB9IGNhdGNoIChlcnI6IHVua25vd24pIHsKICAgICAgbGV0IG1zZyA9IHQoJ2F1dGgubG9naW4uZXJyb3JzLmdlbmVyaWMnKTsKICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEZpcmViYXNlRXJyb3IpIHsKICAgICAgICBzd2l0Y2ggKGVyci5jb2RlKSB7CiAgICAgICAgICBjYXNlICdhdXRoL2ludmFsaWQtZW1haWwnOgogICAgICAgICAgICBtc2cgPSB0KCdhdXRoLmxvZ2luLmVycm9ycy5pbnZhbGlkRW1haWwnKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdhdXRoL3VzZXItZGlzYWJsZWQnOgogICAgICAgICAgICBtc2cgPSB0KCdhdXRoLmxvZ2luLmVycm9ycy51c2VyRGlzYWJsZWQnKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdhdXRoL3VzZXItbm90LWZvdW5kJzoKICAgICAgICAgIGNhc2UgJ2F1dGgvd3JvbmctcGFzc3dvcmQnOgogICAgICAgICAgICBtc2cgPSB0KCdhdXRoLmxvZ2luLmVycm9ycy5iYWRDcmVkcycpOwogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgICAgQWxlcnQuYWxlcnQoJ0Vycm9yJywgbXNnKTsKICAgIH0gZmluYWxseSB7CiAgICAgIHNldExvYWRpbmcoZmFsc2UpOwogICAgfQogIH07CgogIHJldHVybiAoCiAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxLCBwYWRkaW5nOiAxNiwgZ2FwOiAxNCwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInIH19PgogICAgICA8VGV4dCBzdHlsZT17eyBmb250U2l6ZTogMjgsIGZvbnRXZWlnaHQ6ICc3MDAnIH19Pnt0KCdhdXRoLmxvZ2luLnRpdGxlJyl9PC9UZXh0PgoKICAgICAgPFRleHRJbnB1dAogICAgICAgIHZhbHVlPXtlbWFpbH0KICAgICAgICBvbkNoYW5nZVRleHQ9e3NldEVtYWlsfQogICAgICAgIGF1dG9DYXBpdGFsaXplPSJub25lIgogICAgICAgIGF1dG9Db3JyZWN0PXtmYWxzZX0KICAgICAgICBrZXlib2FyZFR5cGU9ImVtYWlsLWFkZHJlc3MiCiAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ2F1dGgubG9naW4uZW1haWwnKX0KICAgICAgICBzdHlsZT17eyBib3JkZXJXaWR0aDogMSwgYm9yZGVyQ29sb3I6ICcjY2NjJywgYm9yZGVyUmFkaXVzOiAxMiwgcGFkZGluZzogMTIgfX0KICAgICAgLz4KCiAgICAgIDxUZXh0SW5wdXQKICAgICAgICB2YWx1ZT17cGFzc3dvcmR9CiAgICAgICAgb25DaGFuZ2VUZXh0PXtzZXRQYXNzd29yZH0KICAgICAgICBzZWN1cmVUZXh0RW50cnkKICAgICAgICBwbGFjZWhvbGRlcj17dCgnYXV0aC5sb2dpbi5wYXNzd29yZCcpfQogICAgICAgIHN0eWxlPXt7IGJvcmRlcldpZHRoOiAxLCBib3JkZXJDb2xvcjogJyNjY2MnLCBib3JkZXJSYWRpdXM6IDEyLCBwYWRkaW5nOiAxMiB9fQogICAgICAvPgoKICAgICAgPFByZXNzYWJsZQogICAgICAgIG9uUHJlc3M9e2hhbmRsZVNpZ25Jbn0KICAgICAgICBkaXNhYmxlZD17bG9hZGluZ30KICAgICAgICBzdHlsZT17ewogICAgICAgICAgcGFkZGluZzogMTQsCiAgICAgICAgICBib3JkZXJSYWRpdXM6IDEyLAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzExMScsCiAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJywKICAgICAgICAgIG9wYWNpdHk6IGxvYWRpbmcgPyAwLjcgOiAxLAogICAgICAgIH19CiAgICAgID4KICAgICAgICB7bG9hZGluZyA/IDxBY3Rpdml0eUluZGljYXRvciAvPiA6IDxUZXh0IHN0eWxlPXt7IGNvbG9yOiAnI2ZmZicsIGZvbnRXZWlnaHQ6ICc2MDAnIH19Pnt0KCdhdXRoLmxvZ2luLnNpZ25JbicpfTwvVGV4dD59CiAgICAgIDwvUHJlc3NhYmxlPgoKICAgICAgPFByZXNzYWJsZSBvblByZXNzPXsoKSA9PiBuYXZpZ2F0aW9uLm5hdmlnYXRlKCdQYXNzd29yZFJlc2V0Jyl9IHN0eWxlPXt7IHBhZGRpbmc6IDggfX0+CiAgICAgICAgPFRleHQgc3R5bGU9e3sgdGV4dERlY29yYXRpb25MaW5lOiAndW5kZXJsaW5lJyB9fT57dCgnYXV0aC5sb2dpbi5mb3Jnb3QnKX08L1RleHQ+CiAgICAgIDwvUHJlc3NhYmxlPgoKICAgICAgPFByZXNzYWJsZSBvblByZXNzPXsoKSA9PiBuYXZpZ2F0aW9uLm5hdmlnYXRlKCdTaWdudXAnKX0gc3R5bGU9e3sgcGFkZGluZzogOCB9fT4KICAgICAgICA8VGV4dCBzdHlsZT17eyB0ZXh0RGVjb3JhdGlvbkxpbmU6ICd1bmRlcmxpbmUnIH19Pnt0KCdhdXRoLmxvZ2luLmNyZWF0ZScpfTwvVGV4dD4KICAgICAgPC9QcmVzc2FibGU+CgogICAgICA8UHJlc3NhYmxlIG9uUHJlc3M9e2dvTWFpbn0gc3R5bGU9e3sgcGFkZGluZzogMTIsIG1hcmdpblRvcDogOCwgYWxpZ25JdGVtczogJ2NlbnRlcicgfX0+CiAgICAgICAgPFRleHQgc3R5bGU9e3sgdGV4dERlY29yYXRpb25MaW5lOiAndW5kZXJsaW5lJyB9fT57dCgnYXV0aC5sb2dpbi5ndWVzdCcpfTwvVGV4dD4KICAgICAgPC9QcmVzc2FibGU+CiAgICA8L1ZpZXc+CiAgKTsKfQo="
    },
    {
      "path": "src/screens/OnboardingScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgVmlldywgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBPbmJvYXJkaW5nU2NyZWVuKCkgewogIHJldHVybiAoCiAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInIH19PgogICAgICA8VGV4dD5PbmJvYXJkaW5nPC9UZXh0PgogICAgPC9WaWV3PgogICk7Cn0K"
    },
    {
      "path": "src/screens/PasswordResetScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBWaWV3LCBUZXh0LCBUZXh0SW5wdXQsIFByZXNzYWJsZSwgQWN0aXZpdHlJbmRpY2F0b3IsIEFsZXJ0IH0gZnJvbSAncmVhY3QtbmF0aXZlJzsKaW1wb3J0IHsgTmF0aXZlU3RhY2tTY3JlZW5Qcm9wcyB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjayc7CmltcG9ydCB7IHNlbmRQYXNzd29yZFJlc2V0RW1haWwgfSBmcm9tICdmaXJlYmFzZS9hdXRoJzsKaW1wb3J0IHsgRmlyZWJhc2VFcnJvciB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7CmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7CmltcG9ydCB7IGF1dGggfSBmcm9tICcuLi9zZXJ2aWNlcy9maXJlYmFzZSc7CmltcG9ydCB7IEF1dGhTdGFja1BhcmFtTGlzdCB9IGZyb20gJy4uL25hdmlnYXRpb24vQXV0aFN0YWNrJzsKCnR5cGUgUHJvcHMgPSBOYXRpdmVTdGFja1NjcmVlblByb3BzPEF1dGhTdGFja1BhcmFtTGlzdCwgJ1Bhc3N3b3JkUmVzZXQnPjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBhc3N3b3JkUmVzZXRTY3JlZW4oeyBuYXZpZ2F0aW9uIH06IFByb3BzKSB7CiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpOwogIGNvbnN0IFtlbWFpbCwgc2V0RW1haWxdID0gdXNlU3RhdGUoJycpOwogIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTsKCiAgY29uc3QgaGFuZGxlUmVzZXQgPSBhc3luYyAoKSA9PiB7CiAgICBpZiAoIWVtYWlsKSB7CiAgICAgIEFsZXJ0LmFsZXJ0KHQoJ2F1dGgucmVzZXQubWlzc2luZycpKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgc2V0TG9hZGluZyh0cnVlKTsKICAgIHRyeSB7CiAgICAgIGF3YWl0IHNlbmRQYXNzd29yZFJlc2V0RW1haWwoYXV0aCwgZW1haWwudHJpbSgpKTsKICAgICAgQWxlcnQuYWxlcnQodCgnYXV0aC5yZXNldC5zZW50VGl0bGUnKSwgdCgnYXV0aC5yZXNldC5zZW50TXNnJyksIFsKICAgICAgICB7IHRleHQ6ICdPSycsIG9uUHJlc3M6ICgpID0+IG5hdmlnYXRpb24ubmF2aWdhdGUoJ0xvZ2luJykgfSwKICAgICAgXSk7CiAgICB9IGNhdGNoIChlcnI6IHVua25vd24pIHsKICAgICAgbGV0IG1zZyA9IHQoJ2F1dGgucmVzZXQuZXJyb3JzLmdlbmVyaWMnKTsKICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEZpcmViYXNlRXJyb3IpIHsKICAgICAgICBzd2l0Y2ggKGVyci5jb2RlKSB7CiAgICAgICAgICBjYXNlICdhdXRoL2ludmFsaWQtZW1haWwnOgogICAgICAgICAgICBtc2cgPSB0KCdhdXRoLnJlc2V0LmVycm9ycy5pbnZhbGlkRW1haWwnKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdhdXRoL3VzZXItbm90LWZvdW5kJzoKICAgICAgICAgICAgbXNnID0gdCgnYXV0aC5yZXNldC5lcnJvcnMubm90Rm91bmQnKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICAgIEFsZXJ0LmFsZXJ0KCdFcnJvcicsIG1zZyk7CiAgICB9IGZpbmFsbHkgewogICAgICBzZXRMb2FkaW5nKGZhbHNlKTsKICAgIH0KICB9OwoKICByZXR1cm4gKAogICAgPFZpZXcgc3R5bGU9e3sgZmxleDogMSwgcGFkZGluZzogMTYsIGdhcDogMTQsIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyB9fT4KICAgICAgPFRleHQgc3R5bGU9e3sgZm9udFNpemU6IDI4LCBmb250V2VpZ2h0OiAnNzAwJyB9fT57dCgnYXV0aC5yZXNldC50aXRsZScpfTwvVGV4dD4KCiAgICAgIDxUZXh0SW5wdXQKICAgICAgICB2YWx1ZT17ZW1haWx9CiAgICAgICAgb25DaGFuZ2VUZXh0PXtzZXRFbWFpbH0KICAgICAgICBhdXRvQ2FwaXRhbGl6ZT0ibm9uZSIKICAgICAgICBhdXRvQ29ycmVjdD17ZmFsc2V9CiAgICAgICAga2V5Ym9hcmRUeXBlPSJlbWFpbC1hZGRyZXNzIgogICAgICAgIHBsYWNlaG9sZGVyPXt0KCdhdXRoLnJlc2V0LmVtYWlsJyl9CiAgICAgICAgc3R5bGU9e3sgYm9yZGVyV2lkdGg6IDEsIGJvcmRlckNvbG9yOiAnI2NjYycsIGJvcmRlclJhZGl1czogMTIsIHBhZGRpbmc6IDEyIH19CiAgICAgIC8+CgogICAgICA8UHJlc3NhYmxlCiAgICAgICAgb25QcmVzcz17aGFuZGxlUmVzZXR9CiAgICAgICAgZGlzYWJsZWQ9e2xvYWRpbmd9CiAgICAgICAgc3R5bGU9e3sKICAgICAgICAgIHBhZGRpbmc6IDE0LAogICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMiwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMxMTEnLAogICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsCiAgICAgICAgICBvcGFjaXR5OiBsb2FkaW5nID8gMC43IDogMSwKICAgICAgICB9fQogICAgICA+CiAgICAgICAge2xvYWRpbmcgPyA8QWN0aXZpdHlJbmRpY2F0b3IgLz4gOiA8VGV4dCBzdHlsZT17eyBjb2xvcjogJyNmZmYnLCBmb250V2VpZ2h0OiAnNjAwJyB9fT57dCgnYXV0aC5yZXNldC5zZW5kJyl9PC9UZXh0Pn0KICAgICAgPC9QcmVzc2FibGU+CgogICAgICA8UHJlc3NhYmxlIG9uUHJlc3M9eygpID0+IG5hdmlnYXRpb24ubmF2aWdhdGUoJ0xvZ2luJyl9IHN0eWxlPXt7IHBhZGRpbmc6IDggfX0+CiAgICAgICAgPFRleHQgc3R5bGU9e3sgdGV4dERlY29yYXRpb25MaW5lOiAndW5kZXJsaW5lJyB9fT57dCgnYXV0aC5yZXNldC5iYWNrJyl9PC9UZXh0PgogICAgICA8L1ByZXNzYWJsZT4KICAgIDwvVmlldz4KICApOwp9"
    },
    {
      "path": "src/screens/ProfileScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgVmlldywgVGV4dCwgUHJlc3NhYmxlLCBBbGVydCwgQWN0aXZpdHlJbmRpY2F0b3IgfSBmcm9tICdyZWFjdC1uYXRpdmUnOwppbXBvcnQgeyB1c2VOYXZpZ2F0aW9uLCBDb21tb25BY3Rpb25zIH0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJzsKaW1wb3J0IHsgc2lnbk91dCB9IGZyb20gJ2ZpcmViYXNlL2F1dGgnOwppbXBvcnQgeyBGaXJlYmFzZUVycm9yIH0gZnJvbSAnZmlyZWJhc2UvYXBwJzsKaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JzsKaW1wb3J0IHsgYXV0aCB9IGZyb20gJy4uL3NlcnZpY2VzL2ZpcmViYXNlJzsKaW1wb3J0IHsgcmVzZXRBcHBTdGF0ZURldiB9IGZyb20gJy4uL3V0aWxzL3N0b3JhZ2UnOwppbXBvcnQgdHlwZSB7IFJvb3RTdGFja1BhcmFtTGlzdCB9IGZyb20gJy4uL25hdmlnYXRpb24vUm9vdE5hdmlnYXRvcic7CmltcG9ydCB0eXBlIHsgTmF0aXZlU3RhY2tOYXZpZ2F0aW9uUHJvcCB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjayc7Cgp0eXBlIFJvb3ROYXYgPSBOYXRpdmVTdGFja05hdmlnYXRpb25Qcm9wPFJvb3RTdGFja1BhcmFtTGlzdD47CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQcm9maWxlU2NyZWVuKCkgewogIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTsKICBjb25zdCBuYXZpZ2F0aW9uID0gdXNlTmF2aWdhdGlvbjxSb290TmF2PigpOwogIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTsKCiAgY29uc3QgaGFuZGxlU2lnbk91dCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHsKICAgIHNldExvYWRpbmcodHJ1ZSk7CiAgICB0cnkgewogICAgICBhd2FpdCBzaWduT3V0KGF1dGgpOwogICAgICBuYXZpZ2F0aW9uLmRpc3BhdGNoKAogICAgICAgIENvbW1vbkFjdGlvbnMucmVzZXQoeyBpbmRleDogMCwgcm91dGVzOiBbeyBuYW1lOiAnQXV0aCcgfV0gfSkKICAgICAgKTsKICAgIH0gY2F0Y2ggKGVycjogdW5rbm93bikgewogICAgICBjb25zdCBtc2cgPSBlcnIgaW5zdGFuY2VvZiBGaXJlYmFzZUVycm9yID8gZXJyLm1lc3NhZ2UgOiB0KCdhdXRoLnByb2ZpbGUuc2lnbk91dEZhaWxlZCcpOwogICAgICBBbGVydC5hbGVydCgnRXJyb3InLCBtc2cpOwogICAgfSBmaW5hbGx5IHsKICAgICAgc2V0TG9hZGluZyhmYWxzZSk7CiAgICB9CiAgfSwgW25hdmlnYXRpb24sIHRdKTsKCiAgY29uc3QgaGFuZGxlRGV2UmVzZXQgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7CiAgICBhd2FpdCByZXNldEFwcFN0YXRlRGV2KCk7CiAgICBBbGVydC5hbGVydCgnUmVzZXQnLCAnQXBwIHN0YXRlIGNsZWFyZWQuIFJlc3RhcnQgdG8gc2VlIExhbmd1YWdlIFNlbGVjdGlvbi4nKTsKICB9LCBbXSk7CgogIHJldHVybiAoCiAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxLCBwYWRkaW5nOiAxNiwgZ2FwOiAxNCwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInIH19PgogICAgICA8VGV4dCBzdHlsZT17eyBmb250U2l6ZTogMjgsIGZvbnRXZWlnaHQ6ICc3MDAnIH19Pnt0KCdhdXRoLnByb2ZpbGUudGl0bGUnKX08L1RleHQ+CgogICAgICA8UHJlc3NhYmxlCiAgICAgICAgb25QcmVzcz17aGFuZGxlU2lnbk91dH0KICAgICAgICBkaXNhYmxlZD17bG9hZGluZ30KICAgICAgICBzdHlsZT17ewogICAgICAgICAgcGFkZGluZzogMTQsCiAgICAgICAgICBib3JkZXJSYWRpdXM6IDEyLAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzExMScsCiAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJywKICAgICAgICAgIG9wYWNpdHk6IGxvYWRpbmcgPyAwLjcgOiAxLAogICAgICAgIH19CiAgICAgID4KICAgICAgICB7bG9hZGluZyA/IDxBY3Rpdml0eUluZGljYXRvciAvPiA6IDxUZXh0IHN0eWxlPXt7IGNvbG9yOiAnI2ZmZicsIGZvbnRXZWlnaHQ6ICc2MDAnIH19Pnt0KCdhdXRoLnByb2ZpbGUuc2lnbk91dCcpfTwvVGV4dD59CiAgICAgIDwvUHJlc3NhYmxlPgoKICAgICAgPFByZXNzYWJsZQogICAgICAgIG9uTG9uZ1ByZXNzPXtoYW5kbGVEZXZSZXNldH0KICAgICAgICBkZWxheUxvbmdQcmVzcz17NDAwfQogICAgICAgIHN0eWxlPXt7IHBhZGRpbmc6IDEyLCBib3JkZXJSYWRpdXM6IDgsIGJvcmRlcldpZHRoOiAxLCBib3JkZXJDb2xvcjogJyNjY2MnIH19CiAgICAgID4KICAgICAgICA8VGV4dD57dCgnYXV0aC5wcm9maWxlLmRldlJlc2V0Jyl9PC9UZXh0PgogICAgICA8L1ByZXNzYWJsZT4KICAgIDwvVmlldz4KICApOwp9"
    },
    {
      "path": "src/screens/SearchScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgVmlldywgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7Ci8vIHRoaXMgc2hvdWxkIHdvcmsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2VhcmNoU2NyZWVuKCkgewogIHJldHVybiAoCiAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInIH19PgogICAgICA8VGV4dD5TZWFyY2g8L1RleHQ+CiAgICA8L1ZpZXc+CiAgKTsKfQo="
    },
    {
      "path": "src/screens/SignupScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBWaWV3LCBUZXh0LCBUZXh0SW5wdXQsIFByZXNzYWJsZSwgQWN0aXZpdHlJbmRpY2F0b3IsIEFsZXJ0IH0gZnJvbSAncmVhY3QtbmF0aXZlJzsKaW1wb3J0IHsgTmF0aXZlU3RhY2tTY3JlZW5Qcm9wcyB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjayc7CmltcG9ydCB7IENvbW1vbkFjdGlvbnMgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnOwppbXBvcnQgeyBjcmVhdGVVc2VyV2l0aEVtYWlsQW5kUGFzc3dvcmQsIHNlbmRFbWFpbFZlcmlmaWNhdGlvbiwgc2lnbk91dCB9IGZyb20gJ2ZpcmViYXNlL2F1dGgnOwppbXBvcnQgeyBGaXJlYmFzZUVycm9yIH0gZnJvbSAnZmlyZWJhc2UvYXBwJzsKaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JzsKaW1wb3J0IHsgYXV0aCB9IGZyb20gJy4uL3NlcnZpY2VzL2ZpcmViYXNlJzsKaW1wb3J0IHsgQXV0aFN0YWNrUGFyYW1MaXN0IH0gZnJvbSAnLi4vbmF2aWdhdGlvbi9BdXRoU3RhY2snOwoKdHlwZSBQcm9wcyA9IE5hdGl2ZVN0YWNrU2NyZWVuUHJvcHM8QXV0aFN0YWNrUGFyYW1MaXN0LCAnU2lnbnVwJz47CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaWdudXBTY3JlZW4oeyBuYXZpZ2F0aW9uIH06IFByb3BzKSB7CiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpOwogIGNvbnN0IFtlbWFpbCwgc2V0RW1haWxdID0gdXNlU3RhdGUoJycpOwogIGNvbnN0IFtwYXNzd29yZCwgc2V0UGFzc3dvcmRdID0gdXNlU3RhdGUoJycpOwogIGNvbnN0IFtjb25maXJtLCBzZXRDb25maXJtXSA9IHVzZVN0YXRlKCcnKTsKICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7CgogIGNvbnN0IHJlc2V0VG9BdXRoID0gKCkgPT4KICAgIG5hdmlnYXRpb24uZ2V0UGFyZW50KCk/LmRpc3BhdGNoKAogICAgICBDb21tb25BY3Rpb25zLnJlc2V0KHsgaW5kZXg6IDAsIHJvdXRlczogW3sgbmFtZTogJ0F1dGgnIH1dIH0pCiAgICApOwoKICBjb25zdCBoYW5kbGVTaWdudXAgPSBhc3luYyAoKSA9PiB7CiAgICBpZiAoIWVtYWlsIHx8ICFwYXNzd29yZCB8fCAhY29uZmlybSkgewogICAgICBBbGVydC5hbGVydCh0KCdhdXRoLnNpZ251cC5taXNzaW5nJykpOwogICAgICByZXR1cm47CiAgICB9CiAgICBpZiAocGFzc3dvcmQgIT09IGNvbmZpcm0pIHsKICAgICAgQWxlcnQuYWxlcnQodCgnYXV0aC5zaWdudXAubWlzbWF0Y2gnKSk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGlmIChwYXNzd29yZC5sZW5ndGggPCA2KSB7CiAgICAgIEFsZXJ0LmFsZXJ0KHQoJ2F1dGguc2lnbnVwLndlYWsnKSk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBzZXRMb2FkaW5nKHRydWUpOwogICAgdHJ5IHsKICAgICAgYXdhaXQgY3JlYXRlVXNlcldpdGhFbWFpbEFuZFBhc3N3b3JkKGF1dGgsIGVtYWlsLnRyaW0oKSwgcGFzc3dvcmQpOwogICAgICBpZiAoYXV0aC5jdXJyZW50VXNlcikgewogICAgICAgIGF3YWl0IHNlbmRFbWFpbFZlcmlmaWNhdGlvbihhdXRoLmN1cnJlbnRVc2VyKTsKICAgICAgfQogICAgICBBbGVydC5hbGVydCh0KCdhdXRoLnNpZ251cC52ZXJpZnlUaXRsZScpLCB0KCdhdXRoLnNpZ251cC52ZXJpZnlNc2cnKSk7CiAgICAgIGF3YWl0IHNpZ25PdXQoYXV0aCk7CiAgICAgIHJlc2V0VG9BdXRoKCk7CiAgICB9IGNhdGNoIChlcnI6IHVua25vd24pIHsKICAgICAgbGV0IG1zZyA9IHQoJ2F1dGguc2lnbnVwLmVycm9ycy5nZW5lcmljJyk7CiAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBGaXJlYmFzZUVycm9yKSB7CiAgICAgICAgc3dpdGNoIChlcnIuY29kZSkgewogICAgICAgICAgY2FzZSAnYXV0aC9lbWFpbC1hbHJlYWR5LWluLXVzZSc6CiAgICAgICAgICAgIG1zZyA9IHQoJ2F1dGguc2lnbnVwLmVycm9ycy5pblVzZScpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgJ2F1dGgvaW52YWxpZC1lbWFpbCc6CiAgICAgICAgICAgIG1zZyA9IHQoJ2F1dGguc2lnbnVwLmVycm9ycy5pbnZhbGlkRW1haWwnKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdhdXRoL29wZXJhdGlvbi1ub3QtYWxsb3dlZCc6CiAgICAgICAgICAgIG1zZyA9IHQoJ2F1dGguc2lnbnVwLmVycm9ycy5ub3RBbGxvd2VkJyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAnYXV0aC93ZWFrLXBhc3N3b3JkJzoKICAgICAgICAgICAgbXNnID0gdCgnYXV0aC5zaWdudXAuZXJyb3JzLndlYWsnKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICAgIEFsZXJ0LmFsZXJ0KCdFcnJvcicsIG1zZyk7CiAgICB9IGZpbmFsbHkgewogICAgICBzZXRMb2FkaW5nKGZhbHNlKTsKICAgIH0KICB9OwoKICByZXR1cm4gKAogICAgPFZpZXcgc3R5bGU9e3sgZmxleDogMSwgcGFkZGluZzogMTYsIGdhcDogMTQsIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyB9fT4KICAgICAgPFRleHQgc3R5bGU9e3sgZm9udFNpemU6IDI4LCBmb250V2VpZ2h0OiAnNzAwJyB9fT57dCgnYXV0aC5zaWdudXAudGl0bGUnKX08L1RleHQ+CgogICAgICA8VGV4dElucHV0CiAgICAgICAgdmFsdWU9e2VtYWlsfQogICAgICAgIG9uQ2hhbmdlVGV4dD17c2V0RW1haWx9CiAgICAgICAgYXV0b0NhcGl0YWxpemU9Im5vbmUiCiAgICAgICAgYXV0b0NvcnJlY3Q9e2ZhbHNlfQogICAgICAgIGtleWJvYXJkVHlwZT0iZW1haWwtYWRkcmVzcyIKICAgICAgICBwbGFjZWhvbGRlcj17dCgnYXV0aC5zaWdudXAuZW1haWwnKX0KICAgICAgICBzdHlsZT17eyBib3JkZXJXaWR0aDogMSwgYm9yZGVyQ29sb3I6ICcjY2NjJywgYm9yZGVyUmFkaXVzOiAxMiwgcGFkZGluZzogMTIgfX0KICAgICAgLz4KCiAgICAgIDxUZXh0SW5wdXQKICAgICAgICB2YWx1ZT17cGFzc3dvcmR9CiAgICAgICAgb25DaGFuZ2VUZXh0PXtzZXRQYXNzd29yZH0KICAgICAgICBzZWN1cmVUZXh0RW50cnkKICAgICAgICBwbGFjZWhvbGRlcj17dCgnYXV0aC5zaWdudXAucGFzc3dvcmQnKX0KICAgICAgICBzdHlsZT17eyBib3JkZXJXaWR0aDogMSwgYm9yZGVyQ29sb3I6ICcjY2NjJywgYm9yZGVyUmFkaXVzOiAxMiwgcGFkZGluZzogMTIgfX0KICAgICAgLz4KCiAgICAgIDxUZXh0SW5wdXQKICAgICAgICB2YWx1ZT17Y29uZmlybX0KICAgICAgICBvbkNoYW5nZVRleHQ9e3NldENvbmZpcm19CiAgICAgICAgc2VjdXJlVGV4dEVudHJ5CiAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ2F1dGguc2lnbnVwLmNvbmZpcm0nKX0KICAgICAgICBzdHlsZT17eyBib3JkZXJXaWR0aDogMSwgYm9yZGVyQ29sb3I6ICcjY2NjJywgYm9yZGVyUmFkaXVzOiAxMiwgcGFkZGluZzogMTIgfX0KICAgICAgLz4KCiAgICAgIDxQcmVzc2FibGUKICAgICAgICBvblByZXNzPXtoYW5kbGVTaWdudXB9CiAgICAgICAgZGlzYWJsZWQ9e2xvYWRpbmd9CiAgICAgICAgc3R5bGU9e3sKICAgICAgICAgIHBhZGRpbmc6IDE0LAogICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMiwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMxMTEnLAogICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsCiAgICAgICAgICBvcGFjaXR5OiBsb2FkaW5nID8gMC43IDogMSwKICAgICAgICB9fQogICAgICA+CiAgICAgICAge2xvYWRpbmcgPyA8QWN0aXZpdHlJbmRpY2F0b3IgLz4gOiA8VGV4dCBzdHlsZT17eyBjb2xvcjogJyNmZmYnLCBmb250V2VpZ2h0OiAnNjAwJyB9fT57dCgnYXV0aC5zaWdudXAuc2lnblVwJyl9PC9UZXh0Pn0KICAgICAgPC9QcmVzc2FibGU+CgogICAgICA8UHJlc3NhYmxlIG9uUHJlc3M9eygpID0+IG5hdmlnYXRpb24ubmF2aWdhdGUoJ0xvZ2luJyl9IHN0eWxlPXt7IHBhZGRpbmc6IDggfX0+CiAgICAgICAgPFRleHQgc3R5bGU9e3sgdGV4dERlY29yYXRpb25MaW5lOiAndW5kZXJsaW5lJyB9fT57dCgnYXV0aC5zaWdudXAuaGF2ZScpfTwvVGV4dD4KICAgICAgPC9QcmVzc2FibGU+CiAgICA8L1ZpZXc+CiAgKTsKfQ=="
    },
    {
      "path": "src/screens/SplashScreen.tsx",
      "base64": "aW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgVmlldywgQWN0aXZpdHlJbmRpY2F0b3IgfSBmcm9tICdyZWFjdC1uYXRpdmUnOwppbXBvcnQgdHlwZSB7IE5hdGl2ZVN0YWNrU2NyZWVuUHJvcHMgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUtc3RhY2snOwppbXBvcnQgeyBDb21tb25BY3Rpb25zIH0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJzsKaW1wb3J0IHsgb25BdXRoU3RhdGVDaGFuZ2VkIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7CgppbXBvcnQgeyBnZXRPbmJvYXJkaW5nRG9uZSwgZ2V0QXBwTGFuZ3VhZ2UgfSBmcm9tICcuLi91dGlscy9zdG9yYWdlJzsKaW1wb3J0IGkxOG4gZnJvbSAnLi4vdXRpbHMvaTE4bic7CmltcG9ydCB7IGF1dGggfSBmcm9tICcuLi9zZXJ2aWNlcy9maXJlYmFzZSc7CmltcG9ydCB0eXBlIHsgT25ib2FyZGluZ1N0YWNrUGFyYW1MaXN0IH0gZnJvbSAnLi4vbmF2aWdhdGlvbi9PbmJvYXJkaW5nU3RhY2snOwppbXBvcnQgdHlwZSB7IFJvb3RTdGFja1BhcmFtTGlzdCB9IGZyb20gJy4uL25hdmlnYXRpb24vUm9vdE5hdmlnYXRvcic7CmltcG9ydCB0eXBlIHsgTmF0aXZlU3RhY2tOYXZpZ2F0aW9uUHJvcCB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjayc7Cgp0eXBlIFByb3BzID0gTmF0aXZlU3RhY2tTY3JlZW5Qcm9wczxPbmJvYXJkaW5nU3RhY2tQYXJhbUxpc3QsICdTcGxhc2gnPjsKdHlwZSBSb290TmF2ID0gTmF0aXZlU3RhY2tOYXZpZ2F0aW9uUHJvcDxSb290U3RhY2tQYXJhbUxpc3Q+OwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU3BsYXNoU2NyZWVuKHsgbmF2aWdhdGlvbiB9OiBQcm9wcykgewogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICBsZXQgdW5zdWJBdXRoOiAoKCkgPT4gdm9pZCkgfCBudWxsID0gbnVsbDsKCiAgICAoYXN5bmMgKCkgPT4gewogICAgICBjb25zdCBsYW5nID0gYXdhaXQgZ2V0QXBwTGFuZ3VhZ2UoKTsKICAgICAgaWYgKGxhbmcpIGkxOG4uY2hhbmdlTGFuZ3VhZ2UobGFuZyk7CgogICAgICBjb25zdCBkb25lID0gYXdhaXQgZ2V0T25ib2FyZGluZ0RvbmUoKTsKICAgICAgaWYgKCFkb25lIHx8ICFsYW5nKSB7CiAgICAgICAgbmF2aWdhdGlvbi5yZXBsYWNlKCdMYW5ndWFnZScpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3Qgcm9vdE5hdiA9IG5hdmlnYXRpb24uZ2V0UGFyZW50PFJvb3ROYXY+KCk7CiAgICAgIHVuc3ViQXV0aCA9IG9uQXV0aFN0YXRlQ2hhbmdlZChhdXRoLCAodSkgPT4gewogICAgICAgIHJvb3ROYXY/LmRpc3BhdGNoKAogICAgICAgICAgQ29tbW9uQWN0aW9ucy5yZXNldCh7CiAgICAgICAgICAgIGluZGV4OiAwLAogICAgICAgICAgICByb3V0ZXM6IFt7IG5hbWU6IHUgPyAnTWFpbicgOiAnQXV0aCcgfV0sCiAgICAgICAgICB9KQogICAgICAgICk7CiAgICAgIH0pOwogICAgfSkoKTsKCiAgICByZXR1cm4gKCkgPT4gewogICAgICBpZiAodW5zdWJBdXRoKSB1bnN1YkF1dGgoKTsKICAgIH07CiAgfSwgW25hdmlnYXRpb25dKTsKCiAgcmV0dXJuICgKICAgIDxWaWV3IHN0eWxlPXt7IGZsZXg6IDEsIGFsaWduSXRlbXM6ICdjZW50ZXInLCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicgfX0+CiAgICAgIDxBY3Rpdml0eUluZGljYXRvciAvPgogICAgPC9WaWV3PgogICk7Cn0K"
    },
    {
      "path": "src/services/analytics.ts",
      "base64": "dHlwZSBQYXJhbXMgPSBSZWNvcmQ8c3RyaW5nLCBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZD47CmV4cG9ydCBmdW5jdGlvbiBsb2dFdmVudChuYW1lOiBzdHJpbmcsIHBhcmFtcz86IFBhcmFtcykgewogIGlmIChfX0RFVl9fKSBjb25zb2xlLmxvZygnW2FuYWx5dGljc10nLCBuYW1lLCBwYXJhbXMgPz8ge30pOwp9CmV4cG9ydCBmdW5jdGlvbiBzZXRVc2VySWQoaWQ6IHN0cmluZyB8IG51bGwpIHsKICBpZiAoX19ERVZfXykgY29uc29sZS5sb2coJ1thbmFseXRpY3NdIHNldFVzZXJJZCcsIGlkKTsKfQo="
    },
    {
      "path": "src/services/crashlytics.ts",
      "base64": "ZXhwb3J0IGZ1bmN0aW9uIHJlY29yZEVycm9yKGVycm9yOiB1bmtub3duLCBjdHg/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPikgewogIGlmIChfX0RFVl9fKSBjb25zb2xlLmVycm9yKCdbY3Jhc2hseXRpY3NdJywgZXJyb3IsIGN0eCA/PyB7fSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHNldFVzZXJJZChpZDogc3RyaW5nIHwgbnVsbCkgewogIGlmIChfX0RFVl9fKSBjb25zb2xlLmxvZygnW2NyYXNobHl0aWNzXSBzZXRVc2VySWQnLCBpZCk7Cn0K"
    },
    {
      "path": "src/services/firebase.ts",
      "base64": "aW1wb3J0IHsgaW5pdGlhbGl6ZUFwcCwgZ2V0QXBwcywgRmlyZWJhc2VBcHAgfSBmcm9tICdmaXJlYmFzZS9hcHAnOwppbXBvcnQgeyBnZXRGaXJlc3RvcmUsIEZpcmVzdG9yZSB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7CmltcG9ydCB7IGdldFN0b3JhZ2UsIEZpcmViYXNlU3RvcmFnZSB9IGZyb20gJ2ZpcmViYXNlL3N0b3JhZ2UnOwppbXBvcnQgQXN5bmNTdG9yYWdlIGZyb20gJ0ByZWFjdC1uYXRpdmUtYXN5bmMtc3RvcmFnZS9hc3luYy1zdG9yYWdlJzsKaW1wb3J0IHsgaW5pdGlhbGl6ZUF1dGgsIGdldEF1dGgsIEF1dGgsIGdldFJlYWN0TmF0aXZlUGVyc2lzdGVuY2UgfSBmcm9tICdmaXJlYmFzZS9hdXRoJzsKCmNvbnN0IGZpcmViYXNlQ29uZmlnID0gewogIGFwaUtleTogcHJvY2Vzcy5lbnYuRVhQT19QVUJMSUNfRklSRUJBU0VfQVBJX0tFWSwKICBhdXRoRG9tYWluOiBwcm9jZXNzLmVudi5FWFBPX1BVQkxJQ19GSVJFQkFTRV9BVVRIX0RPTUFJTiwKICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52LkVYUE9fUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQsCiAgc3RvcmFnZUJ1Y2tldDogcHJvY2Vzcy5lbnYuRVhQT19QVUJMSUNfRklSRUJBU0VfU1RPUkFHRV9CVUNLRVQsCiAgbWVzc2FnaW5nU2VuZGVySWQ6IHByb2Nlc3MuZW52LkVYUE9fUFVCTElDX0ZJUkVCQVNFX01FU1NBR0lOR19TRU5ERVJfSUQsCiAgYXBwSWQ6IHByb2Nlc3MuZW52LkVYUE9fUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCwKICBtZWFzdXJlbWVudElkOiBwcm9jZXNzLmVudi5FWFBPX1BVQkxJQ19GSVJFQkFTRV9NRUFTVVJFTUVOVF9JRCwKfTsKCmNvbnN0IGFwcDogRmlyZWJhc2VBcHAgPSBnZXRBcHBzKCkubGVuZ3RoID8gZ2V0QXBwcygpWzBdISA6IGluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpOwoKbGV0IGF1dGg6IEF1dGg7CnRyeSB7CiAgYXV0aCA9IGluaXRpYWxpemVBdXRoKGFwcCwgewogICAgcGVyc2lzdGVuY2U6IGdldFJlYWN0TmF0aXZlUGVyc2lzdGVuY2UoQXN5bmNTdG9yYWdlKSwKICB9KTsKfSBjYXRjaCB7CiAgYXV0aCA9IGdldEF1dGgoYXBwKTsKfQoKY29uc3QgZGI6IEZpcmVzdG9yZSA9IGdldEZpcmVzdG9yZShhcHApOwpjb25zdCBzdG9yYWdlOiBGaXJlYmFzZVN0b3JhZ2UgPSBnZXRTdG9yYWdlKGFwcCk7CgpleHBvcnQgeyBhcHAsIGF1dGgsIGRiLCBzdG9yYWdlIH07Cg=="
    },
    {
      "path": "src/utils/i18n.ts",
      "base64": ""
    },
    {
      "path": "src/utils/index.ts",
      "base64": "Ly8gdHJpZ2dlciAyMDI1LTA4LTI1VDE2OjE3OjA4Wgo="
    },
    {
      "path": "src/utils/storage.ts",
      "base64": "aW1wb3J0IEFzeW5jU3RvcmFnZSBmcm9tICdAcmVhY3QtbmF0aXZlLWFzeW5jLXN0b3JhZ2UvYXN5bmMtc3RvcmFnZSc7Cgpjb25zdCBLRVlTID0gewogIG9uYm9hcmRpbmdEb25lOiAnb25ib2FyZGluZ19kb25lJywKICBhcHBMYW5ndWFnZTogJ2FwcF9sYW5ndWFnZScsCiAgYXV0aGVkOiAnYXV0aF9hdXRoZWQnLAp9IGFzIGNvbnN0OwoKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNldE9uYm9hcmRpbmdEb25lKHY6IGJvb2xlYW4pIHsKICBhd2FpdCBBc3luY1N0b3JhZ2Uuc2V0SXRlbShLRVlTLm9uYm9hcmRpbmdEb25lLCB2ID8gJzEnIDogJzAnKTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0T25ib2FyZGluZ0RvbmUoKSB7CiAgY29uc3QgdiA9IGF3YWl0IEFzeW5jU3RvcmFnZS5nZXRJdGVtKEtFWVMub25ib2FyZGluZ0RvbmUpOwogIHJldHVybiB2ID09PSAnMSc7Cn0KCmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRBcHBMYW5ndWFnZShjb2RlOiBzdHJpbmcpIHsKICBhd2FpdCBBc3luY1N0b3JhZ2Uuc2V0SXRlbShLRVlTLmFwcExhbmd1YWdlLCBjb2RlKTsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QXBwTGFuZ3VhZ2UoKSB7CiAgcmV0dXJuIEFzeW5jU3RvcmFnZS5nZXRJdGVtKEtFWVMuYXBwTGFuZ3VhZ2UpOwp9CgpleHBvcnQgYXN5bmMgZnVuY3Rpb24gc2V0QXV0aGVkKHY6IGJvb2xlYW4pIHsKICBhd2FpdCBBc3luY1N0b3JhZ2Uuc2V0SXRlbShLRVlTLmF1dGhlZCwgdiA/ICcxJyA6ICcwJyk7Cn0KZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEF1dGhlZCgpIHsKICBjb25zdCB2ID0gYXdhaXQgQXN5bmNTdG9yYWdlLmdldEl0ZW0oS0VZUy5hdXRoZWQpOwogIHJldHVybiB2ID09PSAnMSc7Cn0KCi8qKiBERVYgT05MWTogY2FsbCB0byBjbGVhciBvbmJvYXJkaW5nL2F1dGgvbGFuZyBzbyBuZXh0IGxhdW5jaCBzaG93cyBMYW5ndWFnZVNlbGVjdGlvbiAqLwpleHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVzZXRBcHBTdGF0ZURldigpIHsKICBhd2FpdCBBc3luY1N0b3JhZ2UubXVsdGlSZW1vdmUoW0tFWVMub25ib2FyZGluZ0RvbmUsIEtFWVMuYXBwTGFuZ3VhZ2UsIEtFWVMuYXV0aGVkXSk7Cn0K"
    },
    {
      "path": "tsconfig.json",
      "base64": "ewogICJleHRlbmRzIjogImV4cG8vdHNjb25maWcuYmFzZSIsCiAgImNvbXBpbGVyT3B0aW9ucyI6IHsKICAgICJza2lwTGliQ2hlY2siOiB0cnVlLAogICAgIm1vZHVsZVJlc29sdXRpb24iOiAiYnVuZGxlciIsCiAgICAicGF0aHMiOiB7CiAgICAgICJmaXJlYmFzZS9hdXRoIjogWyIuL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvYXV0aC9kaXN0L2luZGV4LnJuLmQudHMiXQogICAgfQogIH0sCiAgImluY2x1ZGUiOiBbIioqLyoudHMiLCAiKiovKi50c3giXQp9Cg=="
    }
  ]
}
